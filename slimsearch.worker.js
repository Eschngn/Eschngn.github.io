/**
* @vue/shared v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const Se={},ze=()=>{},Ce=Object.assign,Oe=Array.isArray,j=e=>typeof e=="function",Me=e=>typeof e=="string",Ne=e=>typeof e=="symbol";let X;const L=()=>X||(X=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});/**
* @vue/reactivity v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Ne));function P(e){const t=e&&e.__v_raw;return t?P(t):e}function Te(e){return e?e.__v_isRef===!0:!1}/**
* @vue/runtime-core v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const v=[];function kt(e){v.push(e)}function Et(){v.pop()}let W=!1;function It(e,...t){if(W)return;W=!0;const n=v.length?v[v.length-1].component:null,o=n&&n.appContext.config.warnHandler,s=Fe();if(o)A(o,n,11,[e+t.map(r=>{var i,c;return(c=(i=r.toString)==null?void 0:i.call(r))!=null?c:JSON.stringify(r)}).join(""),n&&n.proxy,s.map(({vnode:r})=>`at <${re(n,r.type)}>`).join(`
`),s]);else{const r=[`[Vue warn]: ${e}`,...t];s.length&&r.push(`
`,...$e(s)),console.warn(...r)}W=!1}function Fe(){let e=v[v.length-1];if(!e)return[];const t=[];for(;e;){const n=t[0];n&&n.vnode===e?n.recurseCount++:t.push({vnode:e,recurseCount:0});const o=e.component&&e.component.parent;e=o&&o.vnode}return t}function $e(e){const t=[];return e.forEach((n,o)=>{t.push(...o===0?[]:[`
`],...Ve(n))}),t}function Ve({vnode:e,recurseCount:t}){const n=t>0?`... (${t} recursive calls)`:"",o=e.component?e.component.parent==null:!1,s=` at <${re(e.component,e.type,o)}`,r=">"+n;return e.props?[s,...Re(e.props),r]:[s+r]}function Re(e){const t=[],n=Object.keys(e);return n.slice(0,3).forEach(o=>{t.push(...Z(o,e[o]))}),n.length>3&&t.push(" ..."),t}function Z(e,t,n){return Me(t)?(t=JSON.stringify(t),n?t:[`${e}=${t}`]):typeof t=="number"||typeof t=="boolean"||t==null?n?t:[`${e}=${t}`]:Te(t)?(t=Z(e,P(t.value),!0),n?t:[`${e}=Ref<`,t,">"]):j(t)?[`${e}=fn${t.name?`<${t.name}>`:""}`]:(t=P(t),n?t:[`${e}=`,t])}const vt={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",0:"setup function",1:"render function",2:"watcher getter",3:"watcher callback",4:"watcher cleanup function",5:"native event handler",6:"component event handler",7:"vnode hook",8:"directive hook",9:"transition hook",10:"app errorHandler",11:"app warnHandler",12:"ref function",13:"async component loader",14:"scheduler flush",15:"component update",16:"app unmount cleanup function"};function A(e,t,n,o){try{return o?e(...o):e()}catch(s){ee(s,t,n)}}function ee(e,t,n,o=!0){const s=t?t.vnode:null,{errorHandler:r,throwUnhandledErrorInProduction:i}=t&&t.appContext.config||Se;if(t){let c=t.parent;const l=t.proxy,u=`https://vuejs.org/error-reference/#runtime-${n}`;for(;c;){const a=c.ec;if(a){for(let h=0;h<a.length;h++)if(a[h](e,l,u)===!1)return}c=c.parent}if(r){A(r,null,10,[e,l,u]);return}}De(e,n,s,o,i)}function De(e,t,n,o=!0,s=!1){if(s)throw e;console.error(e)}const b=[];let x=-1;const S=[];let k=null,z=0;const je=Promise.resolve();let q=null;const Le=100;function Pe(e){let t=x+1,n=b.length;for(;t<n;){const o=t+n>>>1,s=b[o],r=M(s);r<e||r===e&&s.flags&2?t=o+1:n=o}return t}function We(e){if(!(e.flags&1)){const t=M(e),n=b[b.length-1];!n||!(e.flags&2)&&t>=M(n)?b.push(e):b.splice(Pe(t),0,e),e.flags|=1,te()}}function te(){q||(q=je.then(ne))}function Ae(e){Oe(e)?S.push(...e):k&&e.id===-1?k.splice(z+1,0,e):e.flags&1||(S.push(e),e.flags|=1),te()}function qe(e){if(S.length){const t=[...new Set(S)].sort((n,o)=>M(n)-M(o));if(S.length=0,k){k.push(...t);return}for(k=t,z=0;z<k.length;z++){const n=k[z];n.flags&4&&(n.flags&=-2),n.flags&8||n(),n.flags&=-2}k=null,z=0}}const M=e=>e.id==null?e.flags&2?-1:1/0:e.id;function ne(e){const t=ze;try{for(x=0;x<b.length;x++){const n=b[x];n&&!(n.flags&8)&&(n.flags&4&&(n.flags&=-2),A(n,n.i,n.i?15:14),n.flags&4||(n.flags&=-2))}}finally{for(;x<b.length;x++){const n=b[x];n&&(n.flags&=-2)}x=-1,b.length=0,qe(e),q=null,(b.length||S.length)&&ne(e)}}function St(e,t){const n=e.get(t)||0;if(n>Le){const o=t.i,s=o&&se(o.type);return ee(`Maximum recursive updates exceeded${s?` in component <${s}>`:""}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`,null,10),!0}return e.set(t,n+1),!1}const H=new Map,F=new Map;function zt(e,t){return F.has(e)?!1:(F.set(e,{initialDef:$(t),instances:new Set}),!0)}function $(e){return Je(e)?e.__vccOpts:e}function Ct(e,t){const n=F.get(e);n&&(n.initialDef.render=t,[...n.instances].forEach(o=>{t&&(o.render=t,$(o.type).render=t),o.renderCache=[],o.update()}))}function Ot(e,t){const n=F.get(e);if(!n)return;t=$(t),oe(n.initialDef,t);const o=[...n.instances];for(let s=0;s<o.length;s++){const r=o[s],i=$(r.type);let c=H.get(i);c||(i!==n.initialDef&&oe(i,t),H.set(i,c=new Set)),c.add(r),r.appContext.propsCache.delete(r.type),r.appContext.emitsCache.delete(r.type),r.appContext.optionsCache.delete(r.type),r.ceReload?(c.add(r),r.ceReload(t.styles),c.delete(r)):r.parent?We(()=>{r.parent.update(),c.delete(r)}):r.appContext.reload?r.appContext.reload():typeof window<"u"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required."),r.root.ce&&r!==r.root&&r.root.ce._removeChildStyle(i)}Ae(()=>{H.clear()})}function oe(e,t){Ce(e,t);for(const n in e)n!=="__file"&&!(n in t)&&delete e[n]}function Mt(e){return(t,n)=>{try{return e(t,n)}catch(o){console.error(o),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}L().requestIdleCallback,L().cancelIdleCallback;const Nt={};{const e=L(),t=(n,o)=>{let s;return(s=e[n])||(s=e[n]=[]),s.push(o),r=>{s.length>1?s.forEach(i=>i(r)):s[0](r)}};t("__VUE_INSTANCE_SETTERS__",n=>n),t("__VUE_SSR_SETTERS__",n=>n)}const He=/(?:^|[-_])(\w)/g,Ue=e=>e.replace(He,t=>t.toUpperCase()).replace(/[-_]/g,"");function se(e,t=!0){return j(e)?e.displayName||e.name:e.name||t&&e.__name}function re(e,t,n=!1){let o=se(t);if(!o&&t.__file){const s=t.__file.match(/([^/\\]+)\.\w+$/);s&&(o=s[1])}if(!o&&e&&e.parent){const s=r=>{for(const i in r)if(r[i]===t)return i};o=s(e.components||e.parent.type.components)||s(e.appContext.components)}return o?Ue(o):n?"App":"Anonymous"}function Je(e){return j(e)&&"__vccOpts"in e}[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:Ge}=Object,{fromEntries:Be}=Object,Ye="ENTRIES",ie="KEYS",ce="VALUES",y="";class U{set;_type;_path;constructor(t,n){const o=t._tree,s=Array.from(o.keys());this.set=t,this._type=n,this._path=s.length>0?[{node:o,keys:s}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:n}=C(this._path);if(C(n)===y)return{done:!1,value:this.result()};const o=t.get(C(n));return this._path.push({node:o,keys:Array.from(o.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=C(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>C(t)).filter(t=>t!==y).join("")}value(){return C(this._path).node.get(y)}result(){switch(this._type){case ce:return this.value();case ie:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const C=e=>e[e.length-1],Ke=(e,t,n)=>{const o=new Map;if(typeof t!="string")return o;const s=t.length+1,r=s+n,i=new Uint8Array(r*s).fill(n+1);for(let c=0;c<s;++c)i[c]=c;for(let c=1;c<r;++c)i[c*s]=c;return le(e,t,n,o,i,1,s,""),o},le=(e,t,n,o,s,r,i,c)=>{const l=r*i;e:for(const u of e.keys())if(u===y){const a=s[l-1];a<=n&&o.set(c,[e.get(u),a])}else{let a=r;for(let h=0;h<u.length;++h,++a){const g=u[h],m=i*a,w=m-i;let d=s[m];const f=Math.max(0,a-n-1),p=Math.min(i-1,a+n);for(let _=f;_<p;++_){const E=g!==t[_],D=s[w+_]+ +E,T=s[w+_+1]+1,I=s[m+_]+1,O=s[m+_+1]=Math.min(D,T,I);O<d&&(d=O)}if(d>n)continue e}le(e.get(u),t,n,o,s,a,i,c+u)}};let ue=class N{_tree;_prefix;_size=void 0;constructor(t=new Map,n=""){this._tree=t,this._prefix=n}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[n,o]=V(this._tree,t.slice(this._prefix.length));if(n===void 0){const[s,r]=B(o);for(const i of s.keys())if(i!==y&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),s.get(i)),new N(c,t)}}return new N(n,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,Qe(this._tree,t)}entries(){return new U(this,Ye)}forEach(t){for(const[n,o]of this)t(n,o,this)}fuzzyGet(t,n){return Ke(this._tree,t,n)}get(t){const n=J(this._tree,t);return n!==void 0?n.get(y):void 0}has(t){return J(this._tree,t)?.has(y)??!1}keys(){return new U(this,ie)}set(t,n){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,G(this._tree,t).set(y,n),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,n){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const o=G(this._tree,t);return o.set(y,n(o.get(y))),this}fetch(t,n){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const o=G(this._tree,t);let s=o.get(y);return s===void 0&&o.set(y,s=n()),s}values(){return new U(this,ce)}[Symbol.iterator](){return this.entries()}static from(t){const n=new N;for(const[o,s]of t)n.set(o,s);return n}static fromObject(t){return N.from(Object.entries(t))}};const V=(e,t,n=[])=>{if(t.length===0||e==null)return[e,n];for(const o of e.keys())if(o!==y&&t.startsWith(o))return n.push([e,o]),V(e.get(o),t.slice(o.length),n);return n.push([e,t]),V(void 0,"",n)},J=(e,t)=>{if(t.length===0||!e)return e;for(const n of e.keys())if(n!==y&&t.startsWith(n))return J(e.get(n),t.slice(n.length))},G=(e,t)=>{const n=t.length;e:for(let o=0;e&&o<n;){for(const r of e.keys())if(r!==y&&t[o]===r[0]){const i=Math.min(n-o,r.length);let c=1;for(;c<i&&t[o+c]===r[c];)++c;const l=e.get(r);if(c===r.length)e=l;else{const u=new Map;u.set(r.slice(c),l),e.set(t.slice(o,o+c),u),e.delete(r),e=u}o+=c;continue e}const s=new Map;return e.set(t.slice(o),s),s}return e},Qe=(e,t)=>{const[n,o]=V(e,t);if(n!==void 0){if(n.delete(y),n.size===0)ae(o);else if(n.size===1){const[s,r]=n.entries().next().value;fe(o,s,r)}}},ae=e=>{if(e.length===0)return;const[t,n]=B(e);if(t.delete(n),t.size===0)ae(e.slice(0,-1));else if(t.size===1){const[o,s]=t.entries().next().value;o!==y&&fe(e.slice(0,-1),o,s)}},fe=(e,t,n)=>{if(e.length===0)return;const[o,s]=B(e);o.set(s+t,n),o.delete(s)},B=e=>e[e.length-1],Xe=(e,t)=>{const n=e._idToShortId.get(t);if(n!=null)return e._storedFields.get(n)},Ze=/[\n\r\p{Z}\p{P}]+/u,Y="or",de="and",et="and_not",tt=(e,t)=>{e.includes(t)||e.push(t)},he=(e,t)=>{for(const n of t)e.includes(n)||e.push(n)},pe=({score:e},{score:t})=>t-e,nt=()=>new Map,R=e=>{const t=new Map;for(const n of Object.keys(e))t.set(parseInt(n,10),e[n]);return t},ge=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,me={[Y]:(e,t)=>{for(const n of t.keys()){const o=e.get(n);if(o==null)e.set(n,t.get(n));else{const{score:s,terms:r,match:i}=t.get(n);o.score=o.score+s,o.match=Object.assign(o.match,i),he(o.terms,r)}}return e},[de]:(e,t)=>{const n=new Map;for(const o of t.keys()){const s=e.get(o);if(s==null)continue;const{score:r,terms:i,match:c}=t.get(o);he(s.terms,i),n.set(o,{score:s.score+r,terms:s.terms,match:Object.assign(s.match,c)})}return n},[et]:(e,t)=>{for(const n of t.keys())e.delete(n);return e}},ot=(e,t,n,o,s,r)=>{const{k:i,b:c,d:l}=r;return Math.log(1+(n-t+.5)/(t+.5))*(l+e*(i+1)/(e+i*(1-c+c*o/s)))},st=e=>(t,n,o)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,n,o):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,n,o):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,n,o):1}),_e=(e,t,n,o)=>{for(const s of Object.keys(e._fieldIds))if(e._fieldIds[s]===n){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${o}" was not present in field "${s}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},rt=(e,t,n,o)=>{if(!e._index.has(o)){_e(e,n,t,o);return}const s=e._index.fetch(o,nt),r=s.get(t),i=r?.get(n);!r||typeof i>"u"?_e(e,n,t,o):i<=1?r.size<=1?s.delete(t):r.delete(n):r.set(n,i-1),e._index.get(o).size===0&&e._index.delete(o)},it={k:1.2,b:.7,d:.5},ct={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(Ze),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},ye={combineWith:Y,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:it},lt={combineWith:de,prefix:(e,t,n)=>t===n.length-1},ut={batchSize:1e3,batchWait:10},we={minDirtFactor:.1,minDirtCount:20},at={...ut,...we},be=Symbol("*"),ft=(e,t)=>{const n=new Map,o={...e._options.searchOptions,...t};for(const[s,r]of e._documentIds){const i=o.boostDocument?o.boostDocument(r,"",e._storedFields.get(s)):1;n.set(s,{score:i,terms:[],match:{}})}return n},xe=(e,t=Y)=>{if(e.length===0)return new Map;const n=t.toLowerCase();if(!(n in me))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(me[n])},K=(e,t,n,o,s,r,i,c,l,u=new Map)=>{if(r==null)return u;for(const a of Object.keys(i)){const h=i[a],g=e._fieldIds[a],m=r.get(g);if(m==null)continue;let w=m.size;const d=e._avgFieldLength[g];for(const f of m.keys()){if(!e._documentIds.has(f)){rt(e,g,f,n),w-=1;continue}const p=c?c(e._documentIds.get(f),n,e._storedFields.get(f)):1;if(!p)continue;const _=m.get(f),E=e._fieldLength.get(f)[g],D=ot(_,w,e._documentCount,E,d,l),T=o*s*h*p*D,I=u.get(f);if(I){I.score+=T,tt(I.terms,t);const O=ge(I.match,n);O?O.push(a):I.match[n]=[a]}else u.set(f,{score:T,terms:[t],match:{[n]:[a]}})}}return u},dt=(e,t,n)=>{const o={...e._options.searchOptions,...n},s=(o.fields??e._options.fields).reduce((d,f)=>({...d,[f]:ge(o.boost,f)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:l}=o,{fuzzy:u,prefix:a}={...ye.weights,...i},h=e._index.get(t.term),g=K(e,t.term,t.term,1,t.termBoost,h,s,r,l);let m,w;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,f=d<1?Math.min(c,Math.round(t.term.length*d)):d;f&&(w=e._index.fuzzyGet(t.term,f))}if(m)for(const[d,f]of m){const p=d.length-t.term.length;if(!p)continue;w?.delete(d);const _=a*d.length/(d.length+.3*p);K(e,t.term,d,_,t.termBoost,f,s,r,l,g)}if(w)for(const d of w.keys()){const[f,p]=w.get(d);if(!p)continue;const _=u*d.length/(d.length+p);K(e,t.term,d,_,t.termBoost,f,s,r,l,g)}return g},ke=(e,t,n={})=>{if(t===be)return ft(e,n);if(typeof t!="string"){const a={...n,...t,queries:void 0},h=t.queries.map(g=>ke(e,g,a));return xe(h,a.combineWith)}const{tokenize:o,processTerm:s,searchOptions:r}=e._options,i={tokenize:o,processTerm:s,...r,...n},{tokenize:c,processTerm:l}=i,u=c(t).flatMap(a=>l(a)).filter(a=>!!a).map(st(i)).map(a=>dt(e,a,i));return xe(u,i.combineWith)},Ee=(e,t,n={})=>{const{searchOptions:o}=e._options,s={...o,...n},r=ke(e,t,n),i=[];for(const[c,{score:l,terms:u,match:a}]of r){const h=u.length||1,g={id:e._documentIds.get(c),score:l*h,terms:Object.keys(a),queryTerms:u,match:a};Object.assign(g,e._storedFields.get(c)),(s.filter==null||s.filter(g))&&i.push(g)}return t===be&&s.boostDocument==null||i.sort(pe),i},ht=(e,t,n={})=>{n={...e._options.autoSuggestOptions,...n};const o=new Map;for(const{score:r,terms:i}of Ee(e,t,n)){const c=i.join(" "),l=o.get(c);l!=null?(l.score+=r,l.count+=1):o.set(c,{score:r,terms:i,count:1})}const s=[];for(const[r,{score:i,terms:c,count:l}]of o)s.push({suggestion:r,terms:c,score:i/l});return s.sort(pe),s};class pt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const n=t.autoVacuum==null||t.autoVacuum===!0?at:t.autoVacuum;this._options={...ct,...t,autoVacuum:n,searchOptions:{...ye,...t.searchOptions},autoSuggestOptions:{...lt,...t.autoSuggestOptions}},this._index=new ue,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=we,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[n,o]of this._index){const s={};for(const[r,i]of o)s[r]=Object.fromEntries(i);t.push([n,s])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let n=0;n<t.length;n++)this._fieldIds[t[n]]=n}}const gt=e=>new pt(e),mt=({documentCount:e,nextId:t,fieldIds:n,averageFieldLength:o,dirtCount:s,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=gt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=n,c._avgFieldLength=o,c._dirtCount=s??0,c._index=new ue,c},_t=(e,t)=>{const{index:n,documentIds:o,fieldLength:s,storedFields:r}=e,i=mt(e,t);i._documentIds=R(o),i._fieldLength=R(s),i._storedFields=R(r);for(const[c,l]of i._documentIds)i._idToShortId.set(l,c);for(const[c,l]of n){const u=new Map;for(const a of Object.keys(l))u.set(parseInt(a,10),R(l[a]));i._index.set(c,u)}return i},Q=(e,t)=>{const n=e.toLowerCase(),o=t.toLowerCase(),s=[];let r=0,i=0;const c=(u,a=!1)=>{let h;i===0?h=u.length>20?`… ${u.slice(-20)}`:u:a?h=u.length+i>100?`${u.slice(0,100-i)}… `:u:h=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,h&&s.push(h),i+=h.length,a||(s.push(["mark",t]),i+=t.length,i>=100&&s.push(" …"))};let l=n.indexOf(o,r);if(l===-1)return null;for(;l>=0;){const u=l+o.length;if(c(e.slice(r,l)),r=u,i>100)break;l=n.indexOf(o,r)}return i<100&&c(e.slice(r),!0),s},{entries:yt}=Object,wt=(e,t)=>t.contents.reduce((n,[,o])=>n+o,0)-e.contents.reduce((n,[,o])=>n+o,0),bt=(e,t)=>Math.max(...t.contents.map(([,n])=>n))-Math.max(...e.contents.map(([,n])=>n)),Ie=(e,t,n={},o="max")=>{const s={};return Ee(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...n}).forEach(r=>{const{id:i,terms:c,score:l}=r,u=i.includes("@"),a=i.includes("#"),[h,g]=i.split(/[#@]/),m=Number(h),w=c.sort((f,p)=>f.length-p.length).filter((f,p)=>c.slice(p+1).every(_=>!_.includes(f))),{contents:d}=s[m]??={title:"",contents:[]};if(u)d.push([{type:"customField",id:m,index:g,display:w.map(f=>r.c.map(p=>Q(p,f))).flat().filter(f=>f!==null)},l]);else{const f=w.map(p=>Q(r.h,p)).filter(p=>p!==null);if(f.length&&d.push([{type:a?"heading":"title",id:m,...a&&{anchor:g},display:f},l]),"t"in r&&r.t)for(const p of r.t){const _=w.map(E=>Q(p,E)).filter(E=>E!==null);_.length&&d.push([{type:"text",id:m,...a&&{anchor:g},display:_},l])}}}),yt(s).sort(([,r],[,i])=>(o?wt:bt)(r,i)).map(([r,{title:i,contents:c}])=>{if(!i){const l=Xe(t,r);l&&(i=l.h)}return{title:i,contents:c.map(([l])=>l)}})},ve=(e,t,n={})=>{const o=ht(t,e,{fuzzy:.2,maxFuzzy:3,...n}).map(({suggestion:s})=>s);return e.includes(" ")?o:o.filter(s=>!s.includes(" "))},xt=Be(Ge(JSON.parse("{\"/\":{\"documentCount\":57,\"nextId\":57,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"2#随笔-1\",\"3\":\"3\",\"4\":\"3#标题-2\",\"5\":\"3#标题-3\",\"6\":\"4\",\"7\":\"5\",\"8\":\"5#java\",\"9\":\"6\",\"10\":\"6#标题-2\",\"11\":\"6#标题-3\",\"12\":\"7\",\"13\":\"7#标题-2\",\"14\":\"7#标题-3\",\"15\":\"8\",\"16\":\"8#标题-2\",\"17\":\"8#标题-3\",\"18\":\"9\",\"19\":\"9#标题-2\",\"20\":\"9#标题-3\",\"21\":\"10\",\"22\":\"10#数据类型\",\"23\":\"10#基本数据类型\",\"24\":\"10#包装类型\",\"25\":\"10#两者联系与区别\",\"26\":\"10#浮点数运算的精度丢失\",\"27\":\"10#运算符\",\"28\":\"10#自增自减运算符\",\"29\":\"10#移位运算符\",\"30\":\"10#continue、break-和-return\",\"31\":\"10#变量\",\"32\":\"10#方法\",\"33\":\"10#修饰符\",\"34\":\"11\",\"35\":\"11#面向对象\",\"36\":\"11#接口与抽象类\",\"37\":\"11#抽象类\",\"38\":\"11#接口\",\"39\":\"11#两者的区别\",\"40\":\"11#深拷贝和浅拷贝\",\"41\":\"11#浅拷贝\",\"42\":\"11#深拷贝\",\"43\":\"11#两者对比\",\"44\":\"12\",\"45\":\"12#标题-2\",\"46\":\"12#标题-3\",\"47\":\"13\",\"48\":\"13#标题-2\",\"49\":\"13#标题-3\",\"50\":\"14\",\"51\":\"15\",\"52\":\"16\",\"53\":\"17\",\"54\":\"18\",\"55\":\"19\",\"56\":\"20\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,11],\"1\":[1,7],\"2\":[1,4],\"3\":[3],\"4\":[3,4],\"5\":[3,4],\"6\":[4,483],\"7\":[1,7],\"8\":[1,2],\"9\":[2],\"10\":[3,4],\"11\":[3,5],\"12\":[1],\"13\":[3,4],\"14\":[3,4],\"15\":[1],\"16\":[3,4],\"17\":[3,5],\"18\":[1],\"19\":[3,4],\"20\":[3,5],\"21\":[2],\"22\":[1],\"23\":[2,138],\"24\":[2,195],\"25\":[4,105],\"26\":[5,145],\"27\":[1],\"28\":[3,78],\"29\":[2,185],\"30\":[6,72],\"31\":[1,83],\"32\":[1,172],\"33\":[1,207],\"34\":[2],\"35\":[1,197],\"36\":[3],\"37\":[1,68],\"38\":[1,206],\"39\":[3,213],\"40\":[4],\"41\":[2,156],\"42\":[2,197],\"43\":[2,77],\"44\":[4],\"45\":[3,4],\"46\":[3,4],\"47\":[4],\"48\":[3,4],\"49\":[3,4],\"50\":[0,4],\"51\":[1],\"52\":[1],\"53\":[1],\"54\":[1],\"55\":[1],\"56\":[1]},\"averageFieldLength\":[2.210526315789474,73.87242792764391],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"将你的个人介绍和档案放置在此处。\"]},\"1\":{\"h\":\"随笔\",\"t\":[\"此处是整个随笔文档的目录\"]},\"2\":{\"h\":\"随笔\",\"t\":[\"我的大学四年\"]},\"3\":{\"h\":\"随笔 2\"},\"4\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"5\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"6\":{\"h\":\"我的大学四年\",\"t\":[\"一转眼又到夏天，这个夏天，我的本科大学生活杀青了。此刻我正坐在熟悉的自习室里，周围都是努力复习、备考期末的学弟学妹们，我仿佛看到了曾经的那个我。曾经的我对这种生活习以为常、见怪不怪，现在的我却对此格外珍惜。好像从初中、高中以来，一直都是这样，总是要等说分别了，才会恋恋不舍。\",\"这四年，说快也快，说慢也慢。\",\"大一大二，刚从束缚的高中生活中脱离出来，我每天基本都是玩的时间居多，学习也只是走马观花式的形式学习，又由于受疫情的影响，每天的生活差不多是教室、宿舍、食堂三点一线。那时候思想的重心并不是放在学习上面，而是想着怎么提升游戏技术、怎么谈到甜甜的校园恋爱（单身中）、怎么把恋爱谈好（恋爱中）、怎么把课程的平时分得高一点等等，有时候也会思考大学的意义究竟是什么，会反问自己所谓的大学就是这样子每天吃喝玩乐，然后期末月冲刺一下保证自己不挂科吗？但身边的同学大多数也都是这样过的，感觉自己一学期下来并没有得到什么实质性的提升和进步。总结来说，大一大二的我，思维还没有发生转变，依旧是高中时代的学习应试思维，与高中的区别就是手机电脑自由以及恋爱自由。\",\"大三，在持续学习专业知识后，我逐渐对计算机这个行业有了一定的认识，对自己的职业发展也有了一定的方向，我开始自己学习我感兴趣的方向的专业知识。白天没课的时候，我就泡在自习室里，看网课、刷八股、敲代码，当时的我很享受这样的生活，我真真切切的感受到了自己有在进步，自己的技能有在增长。这一年，我结束了内耗的恋爱、搬离了吵闹的宿舍、重拾了热爱的篮球，学习知识、锻炼身体、好好吃饭、好好休息，没有多虑，无论是学习还是身体健康，每天都比昨天的自己进步一点点，这对于我来说好像才是大学的意义。\",\"大三的末尾，也就是去年的夏天，我开始约面试找实习。我从五一开始积极投简历，一直到七月中旬，才找到一份小厂的实习工作。这段时间，对于当时的我来说压力不小，焦虑也有很多，因为自己确实荒废了前两年，没有任何突出的竞赛、学习成绩以及项目经历，找实习的过程中，屡战屡败，对自己也曾产生深深的自我怀疑。\",\"大四，因为杭州的实习机会多，加上学校里的课程也只剩了毕业设计，所以这一年我基本都在家里，主要的任务就是实习+秋招+实习+春招，然后在空闲的时间里做毕业设计。随着秋招的面试的参与，我当时其实已经陷入了一个麻木的状态，我也对自己的定位有了清楚的认识，像我这样的学历以及已有的能力，能收到互联网的 offer 就算是上上签了，自己也不再执着于投递中大厂，也逐渐的将目光放到一些中小厂上。我也懊悔过自己当初大一大二的时候为什么没有培养意识出去实习，没有积累好的项目经验，我甚至懊悔自己当初高考的时候为什么不多考点分上一个211，这样或许在面临毕业找工作的时候，就不会这么困难。好在功夫不负有心人，秋招和春招我各收获了一个对于我来说算不错的 offer，虽然都不是互联网行业，但也称得上是专业对口。至此，我的大四也接近尾声了。\",\"对于我自己大学四年的学习，学校里教的知识其实很有限，很多知识都是我自己从网上自学的。我没有早一点打破一些信息壁垒，多去了解与竞赛、就业有关的信息，早点确定自己的学习方向，起步自学的时间点太晚了，就导致了自己在找实习、参加校招时候的能力的局限性。\",\"除了上面这些，我还想说些学习之外的话。\",\"除了学习之外，我认为大学生活更是一个自我认识、自我探索的过程，我们要弄明白自己到底是个什么样的人，自己真正热爱的、真正想要的到底是什么，这一点我认为甚至比学习更为重要。\",\"我知道这三个问题，在我们人生的每个不同的阶段，都会有不同的答案，我们也许一生都在追随这三个问题的答案。\",\"在初高中的学生时代，我的答案也许是我是个贪玩调皮但也不讨厌学习的人，我热爱的是数学，我想要未来考上一个好的大学；而到了大学的学生时代，我们会接触来自五湖四海的同学，我们会初步接触社会，所以我们的人生观、价值观、世界观 会得到一次刷新，我们也许会偶尔陷入之前从未有的焦虑与迷茫，所以大学期间对这三个问题的探索，我认为是最重要的。\",\"当然，这三个问题的答案并不是一蹴而就的，而是伴随着学习、竞赛、实习、社交、运动、恋爱等等这些过程，慢慢的在我们的心中有了一个清晰的认识，当心中逐渐有了这三个问题的答案，我相信所谓的迷茫，所谓的内耗焦虑，都会在我们的行动中，逐渐烟消云散。\",\"好啦，我的大学生活至此结束了，我也彻底告别了校园生活。那些和同学一起赶早八的日子、自习室窗前的阳光、篮球场的汗水，都成了我记忆中最温柔的片段。从懵懂踏入校园，到即将步入社会，每一步都充满挑战与成长。感谢遇见的一切人和事，让我更加坚定了自己的方向。未来或许迷茫，但我会带着大学四年的积累与勇气，继续前行。\",\"也祝愿屏幕前的你，身体健康、天天开心、学习工作顺利。\"]},\"7\":{\"h\":\"知识库\",\"t\":[\"此处是整个知识库文档的目录\"]},\"8\":{\"h\":\"Java\",\"t\":[\"Java基础\"]},\"9\":{\"h\":\"执行计划\"},\"10\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"11\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\",\"这里是内容。\"]},\"12\":{\"h\":\"索引\"},\"13\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"14\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"15\":{\"h\":\"数据结构\"},\"16\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"17\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\",\"这里是内容。\"]},\"18\":{\"h\":\"数据类型\"},\"19\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"20\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\",\"这里是内容。\"]},\"21\":{\"h\":\"基础知识1\"},\"22\":{\"h\":\"数据类型\"},\"23\":{\"h\":\"基本数据类型\",\"t\":[\"Java 中有 8 种基本数据类型，分别为：\",\"6 种数字类型： \",\"4 种整数型：byte、short、int、long\",\"2 种浮点型：float、double\",\"1 种字符类型：char\",\"1 种布尔型：boolean。\",\"这 8 种基本数据类型的默认值以及所占空间的大小如下：\",\"基本类型\",\"位数\",\"字节\",\"默认值\",\"取值范围\",\"示例\",\"byte\",\"8\",\"1\",\"0\",\"-128 ~ 127\",\"byte b = 10;\",\"short\",\"16\",\"2\",\"0\",\"-32768（-2^15） ~ 32767（2^15 - 1）\",\"short s=1000；\",\"int\",\"32\",\"4\",\"0\",\"-2147483648 ~ 2147483647\",\"int i = 100;\",\"long\",\"64\",\"8\",\"0L\",\"-9223372036854775808（-2^63） ~ 9223372036854775807（2^63 -1）\",\"long l = 10000L;\",\"char\",\"16\",\"2\",\"'\\\\u0000'\",\"0 ~ 65535（2^16 - 1）\",\"char c = 'A';\",\"float\",\"32\",\"4\",\"0.0f\",\"1.4E-45 ~ 3.4028235E38，单精度，尾数约7位有效数字\",\"float f = 3.14f;\",\"double\",\"64\",\"8\",\"0.0d\",\"4.9E-324 ~ 1.7976931348623157E308，双精度，尾数约15~16位有效数字\",\"double d = 3.1415926;\",\"boolean\",\"1\",\"false\",\"true、false\",\"boolean b = true;\",\"⚠️注意：\",\"Java 里使用 long 类型的数据一定要在数值后面加上 L，否则将作为整型解析。\",\"Java 里使用 float 类型的数据一定要在数值后面加上 f 或 F，否则将无法通过编译。\",\"char a = 'h'char :单引号，String a = \\\"hello\\\" :双引号。\"]},\"24\":{\"h\":\"包装类型\",\"t\":[\"这八种基本类型对应的包装类型如下：\",\"基本类型\",\"包装类（位于 java.lang 包）\",\"byte\",\"Byte\",\"short\",\"Short\",\"int\",\"Integer\",\"long\",\"Long\",\"float\",\"Float\",\"double\",\"Double\",\"char\",\"Character\",\"boolean\",\"Boolean\",\"包装类型的主要作用：\",\"用途\",\"说明\",\"集合中使用\",\"List<int> 是非法的，必须使用 List<Integer>\",\"泛型支持\",\"泛型不支持基本类型，只能用包装类型\",\"提供实用方法\",\"如 Integer.parseInt(\\\"123\\\")、Double.isNaN()\",\"对象化处理\",\"在需要对象的地方（如反射）使用包装类\",\"默认值处理（如 Map.get）\",\"基本类型不能为 null，包装类型可以\",\"包装类型的缓存机制\",\"Java 中的包装类型缓存机制是一种性能优化手段，会对某些包装类的特定数值范围内的对象进行缓存（重用），避免频繁创建新对象。\",\"比如当我们使用：\",\"Integer a = Integer.valueOf(100);\",\"而不是：\",\"Integer a = new Integer(100);\",\"时，valueOf() 方法可能会返回一个缓存的对象，而不是新建的。\",\"📦缓存范围\",\"包装类\",\"缓存范围\",\"Byte\",\"-128 ~ 127\",\"Short\",\"-128 ~ 127\",\"Integer\",\"-128 ~ 127（默认，可配置）\",\"Long\",\"-128 ~ 127\",\"Character\",\"0 ~ 127\",\"Boolean\",\"true / false（两个对象）\",\"Float / Double\",\"❌ 没有缓存机制\",\"Float 和 Double 不采用缓存机制，是因为浮点数值的取值范围极广且精度分散，缓存意义不大，反而会浪费内存资源。\",\"🧪 示例：Integer 缓存机制\",\"Integer x = 128; Integer y = 128; System.out.println(x == y); // false （比较的是引用） Integer a = 100; Integer b = 100; System.out.println(a == b); // true（-128 到 127 缓存） System.out.println(a.equals(b)); // true（比较值）\",\"== 比较的是地址（包装类型是对象引用）；\",\"equals() 比较的是值（包装类中已重写该方法）。\",\"🛠️ Integer 缓存的实现源码\",\"下面是 Integer.java 源码：\",\"public static Integer valueOf(int i) { if (i >= -128 && i <= 127) // 缓存范围 return IntegerCache.cache[i + 128]; else return new Integer(i); }\",\"Integer 缓存的上限可以通过 JVM 参数修改：\",\"-Djava.lang.Integer.IntegerCache.high=1000\",\"可将缓存范围改为 -128 ~ 1000。\"]},\"25\":{\"h\":\"两者联系与区别\",\"t\":[\"自动装箱与自动拆箱\",\"int a = 10; // 基本类型 Integer b = a; // 自动装箱（int → Integer） int c = b; // 自动拆箱（Integer → int）\",\"⚠️注意：如果频繁拆装箱的话，也会严重影响系统的性能。我们应该尽量避免不必要的拆装箱操作。\",\"基本类型和包装类型的区别：\",\"比较维度\",\"基本类型（Primitive）\",\"包装类型（Wrapper）\",\"是否是对象\",\"❌ 否\",\"✅ 是，对象（类的实例）\",\"存储位置\",\"栈内存\",\"堆内存（引用）\",\"默认值\",\"有（如 int 为 0）\",\"可以为 null\",\"使用范围\",\"不能用于泛型、集合等只支持对象的场景\",\"可以用于集合、泛型等\",\"性能\",\"更高（操作直接在栈上进行）\",\"稍低（涉及对象创建与方法调用）\",\"是否有方法\",\"❌ 没有任何方法\",\"✅ 有丰富方法（如 parseXXX）\",\"是否支持 null\",\"❌ 不支持 null\",\"✅ 支持 null\",\"使用场景\",\"一般用于高性能的数值计算场景\",\"一般用于集合、框架、对象传递\"]},\"26\":{\"h\":\"浮点数运算的精度丢失\",\"t\":[\"🌰举个例子：\",\"System.out.println(0.1 + 0.2); // 输出：0.30000000000000004\",\"我们期望输出是 0.3，但却出现了一个 令人不爽的长小数，这就是精度丢失问题。\",\"这个和计算机保存浮点数的机制有很大关系。我们知道计算机是二进制的，而且计算机在表示一个数字时，宽度是有限的，无限循环的小数存储在计算机时，只能被截断，所以就会导致小数精度发生损失的情况。这也就是解释了为什么浮点数没有办法用二进制精确表示。\",\"就比如说十进制下的 0.2 就没办法精确转换成二进制小数：\",\"// 0.2 转换为二进制数的过程为，不断乘以 2，直到不存在小数为止， // 在这个计算过程中，得到的整数部分从上到下排列就是二进制的结果。 0.2 * 2 = 0.4 -> 0 0.4 * 2 = 0.8 -> 0 0.8 * 2 = 1.6 -> 1 0.6 * 2 = 1.2 -> 1 0.2 * 2 = 0.4 -> 0（发生循环） ...\",\"🔐 如何应对/解决浮点精度问题？\",\"✅使用 BigDecimal 进行精确计算：\",\"import java.math.BigDecimal; BigDecimal a = new BigDecimal(\\\"0.1\\\"); BigDecimal b = new BigDecimal(\\\"0.2\\\"); BigDecimal c = new BigDecimal(\\\"0.3\\\"); System.out.println(a.add(b).equals(c)); // true\",\"❗ 注意：用字符串构造 BigDecimal 更精确，不要用 double 构造！\"]},\"27\":{\"h\":\"运算符\"},\"28\":{\"h\":\"自增自减运算符\",\"t\":[\"自增 (++) 和自减 (--) 运算符 是一类常用的一元运算符，用于对变量的值进行 +1 或 -1 操作。它们可以放在变量的前面（前缀）或后面（后缀），但位置不同会导致表达式运算顺序不同。\",\"表达式\",\"含义说明\",\"++x（前缀）\",\"先将 x 加 1，再使用它的值\",\"x++（后缀）\",\"先使用 x 的原值，再加 1\",\"--x（前缀）\",\"先将 x 减 1，再使用它的值\",\"x--（后缀）\",\"先使用 x 的原值，再减 1\",\"示例：\",\"int x = 5; int a = ++x; // x 先加 1 → x = 6，然后赋值给 a → a = 6 int b = x++; // b 先得到 x 的值 6，然后 x 再加 1 → x = 7, b = 6 int y = 5; int c = --y; // y 先减 1 → y = 4，然后赋值给 c → c = 4 int d = y--; // d 先得到 y 的值 4，然后 y 再减 1 → y = 3, d = 4\"]},\"29\":{\"h\":\"移位运算符\",\"t\":[\"移位运算符（Shift Operators） 是对整数类型（二进制位）进行操作的一种运算符，适用于 byte、short、int、long 类型，主要用于高效的数值计算、加密压缩、位图处理等。\",\"使用移位运算符的原因：\",\"高效：现代处理器具有专门的硬件指令来执行这些移位操作，这些指令通常在一个时钟周期内完成。相比之下，乘法和除法等算术运算在硬件层面上需要更多的时钟周期来完成。\",\"节省内存：通过移位操作，可以使用一个整数（如 int 或 long）来存储多个布尔值或标志位，从而节省内存。\",\"Java 中有三种移位运算符：\",\"<< :左移运算符，向左移若干位，高位丢弃，低位补零。x << n,相当于 x 乘以 2 的 n 次方(不溢出的情况下)\",\">> :带符号右移，向右移若干位，高位补符号位，低位丢弃。正数高位补 0,负数高位补 1。x >> n,相当于 x 除以 2 的 n 次方\",\">>> :无符号右移，所有位向右移动，不保留符号位，高位补 0（仅适用于 int/long）\",\"🌰举例说明\",\"int a = 8; // 二进制：0000 1000 System.out.println(a << 1); // 16（左移1位：0001 0000） System.out.println(a >> 1); // 4 （右移1位：0000 0100） System.out.println(a >>> 1); // 4 （和 >> 相同，因为正数符号位为0） int b = -8; // 二进制：1111 1000（补码表示） System.out.println(b >> 1); // -4（符号位为 1，保留，11111100） System.out.println(b >>> 1); // 2147483644（补 0，变成大正数 ，01111100）\",\"⚠️注意：\",\"当移位的位数超过数值所占有的位数，会先对相应位数求余（%）后再进行左移/右移操作（int 32位，long 64位）\",\"移位不会改变变量本身（除非赋值）\",\"移位操作符实际上支持的类型只有int和long，编译器在对short、byte、char类型进行移位前，都会将其转换为int类型再操作\"]},\"30\":{\"h\":\"continue、break 和 return\",\"t\":[\"在循环结构中，当循环条件不满足或者循环次数达到要求时，循环会正常结束。但是，有时候可能需要在循环的过程中，当发生了某种条件之后 ，提前终止循环，这就需要用到下面几个关键词：\",\"continue：指跳出当前的这一次循环，继续下一次循环。\",\"break：指跳出整个循环体，继续执行循环下面的语句。\",\"return 用于跳出所在方法，结束该方法的运行。return 一般有两种用法：\",\"return;：直接使用 return 结束方法执行，用于没有返回值函数的方法\",\"return value;：return 一个特定值，用于有返回值函数的方法\"]},\"31\":{\"h\":\"变量\",\"t\":[\"成员变量与局部变量的区别：\",\"比较项\",\"成员变量\",\"局部变量\",\"定义位置\",\"类中，方法外\",\"方法内部、构造器、代码块中\",\"默认值\",\"✅有，数值型为0，引用型为 null\",\"❌没有，必须手动初始化后才能使用\",\"存储位置\",\"位于堆内存中，因为成员变量都属于对象的属性，静态成员变量（static修饰）是属于类级别的变量，它在堆内存中只有一个实例，被该类的所有实例共享\",\"位于栈内存中，具体在 Java 虚拟机栈中的局部变量表中\",\"生存周期\",\"随对象创建而创建，随对象回收而消亡\",\"随方法调用创建，方法结束后销毁\",\"成员变量与局部变量的区别\"]},\"32\":{\"h\":\"方法\",\"t\":[\"静态方法为什么不能调用非静态成员？\",\"这个需要结合 JVM 的相关知识，主要原因如下：\",\"静态方法是属于类的，在类加载的时候就会分配内存，可以通过类名直接访问。而非静态成员属于实例对象，只有在对象实例化之后才存在，需要通过类的实例对象去访问。\",\"在类的非静态成员不存在的时候静态方法就已经存在了，此时调用在内存中还不存在的非静态成员，属于非法操作。\",\"静态方法和实例方法有何不同？\",\"1、调用方式\",\"在外部调用静态方法时，可以使用 类名.方法名 的方式，也可以使用 对象.方法名 的方式，而实例方法只有后面这种方式。也就是说，调用静态方法可以无需创建对象 。\",\"不过，需要注意的是一般不建议使用 对象.方法名 的方式来调用静态方法。这种方式非常容易造成混淆，静态方法不属于类的某个对象而是属于这个类。\",\"因此，一般建议使用 类名.方法名 的方式来调用静态方法。\",\"2、访问类成员是否存在限制\",\"静态方法在访问本类的成员时，只允许访问静态成员（即静态成员变量和静态方法），不允许访问实例成员（即实例成员变量和实例方法），而实例方法不存在这个限制。\",\"重载和重写的区别\",\"重载就是同样的一个方法能够根据输入数据的不同，做出不同的处理\",\"重写就是当子类继承自父类的相同方法，输入数据一样，但要做出有别于父类的响应时，你就要覆盖父类方法\",\"重载发生在同一个类中（或者父类和子类之间），方法名必须相同，参数类型不同、个数不同、顺序不同，方法返回值和访问修饰符可以不同。重载就是同一个类中多个同名方法根据不同的传参来执行不同的逻辑处理\",\"重写发生在运行期，是子类对父类的允许访问的方法的实现过程进行重新编写。\",\"方法名、参数列表必须相同，子类方法返回值类型应比父类方法返回值类型更小或相等，抛出的异常范围小于等于父类，访问修饰符范围大于等于父类。\",\"如果父类方法访问修饰符为 private/final/static 则子类就不能重写该方法，但是被 static 修饰的方法能够被再次声明。\",\"构造方法无法被重写\"]},\"33\":{\"h\":\"修饰符\",\"t\":[\"（1）public：修饰的类、方法和变量可以被任何其他类访问。\",\"（2）private：不能用于顶级类（即非嵌套类），只能用于内部类；方法和变量只能在定义它的类内部访问。\",\"（3）default：即不加任何访问修饰符，通常称为“默认访问模式“。修饰的类、方法和变量可以被同一包中的其他类访问。\",\"（4）protected：不能用于顶级类（即非嵌套类），只能用于内部类；方法和变量可以被同一包中的其他类访问，也可以被不同包中的子类访问。\",\"（5）static：static 修饰符用于表示类级别的成员，而不是实例级别的成员。也就是说，static 成员属于类，而不属于类的任何特定实例。\",\"静态变量（类变量）：定义在类中的变量，如果用 static 修饰，则该变量是所有对象共享的。\",\"public class MyClass { public static int staticVar = 0; public void incrementStaticVar() { staticVar++; } } public class Main { public static void main(String[] args) { MyClass obj1 = new MyClass(); MyClass obj2 = new MyClass(); obj1.incrementStaticVar(); obj2.incrementStaticVar(); System.out.println(MyClass.staticVar); // 输出：2 } }\",\"静态方法：静态方法可以直接通过类名调用，不需要创建类的实例。静态方法不能访问实例变量和实例方法，只能访问静态变量和静态方法。\",\"public class MyClass { public static void staticMethod() { System.out.println(\\\"This is a static method.\\\"); } } public class Main { public static void main(String[] args) { MyClass.staticMethod(); // 调用静态方法 } }\",\"静态块：静态块用于初始化静态变量，在类加载时执行。\",\"public class MyClass { static { System.out.println(\\\"Static block executed.\\\"); } } public class Main { public static void main(String[] args) { MyClass obj = new MyClass(); // 静态块在类加载时执行 } }\",\"（6）final：final 修饰符用于表示常量、不可继承的类或不可重写的方法。\",\"final变量：使用 final 修饰的变量不可改变，必须在声明时或通过构造方法初始化。\",\"public class MyClass { public final int finalVar = 10; public void changeFinalVar() { // finalVar = 20; // 错误：无法改变 final 变量 } }\",\"final方法：使用 final 修饰的方法不能被子类重写。\",\"public class Parent { public final void finalMethod() { System.out.println(\\\"This method cannot be overridden.\\\"); } } public class Child extends Parent { // public void finalMethod() { // 错误：无法重写 final 方法 // } }\",\"final类：使用 final 修饰的类不能被继承。\",\"public final class MyClass { // Class implementation } // public class SubClass extends MyClass { // 错误：无法继承 final 类 // }\",\"（7）synchronized\",\"synchronized 修饰符用于控制线程同步，以确保在同一时间只有一个线程可以访问某个代码块或方法。\",\"（8）abstract\",\"abstract 修饰符用于创建抽象类和抽象方法，抽象类不能被实例化，抽象方法没有方法体。\",\"可变长参数\",\"从 Java5 开始，Java 支持定义可变长参数，所谓可变长参数就是允许在调用方法时传入不定长度的参数。就比如下面这个方法就可以接受 0 个或者多个参数。\",\"public static void method1(String... args) { //...... }\",\"另外，可变参数只能作为函数的最后一个参数，但其前面可以有也可以没有任何其他参数。\",\"public static void method2(String arg1, String... args) { //...... }\"]},\"34\":{\"h\":\"基础知识2\"},\"35\":{\"h\":\"面向对象\",\"t\":[\"面向过程编程（Procedural-Oriented Programming，POP）和面向对象编程（Object-Oriented Programming，OOP）是两种常见的编程范式，两者对比如下：\",\"比较项\",\"面向过程（POP）\",\"面向对象（OOP）\",\"核心思想\",\"以过程（函数）为中心\",\"以对象（类）为中心\",\"组织方式\",\"程序 = 函数 + 数据\",\"程序 = 对象（属性 + 方法）\",\"关注点\",\"关注流程和步骤\",\"关注数据和行为\",\"数据访问\",\"数据是公开的，函数直接操作\",\"数据封装在对象中，通过方法访问\",\"扩展性和维护性\",\"结构紧密，修改难度大\",\"模块化强，易于扩展与维护\",\"重用性\",\"通过函数复用\",\"通过类继承、接口、多态复用\",\"适用场景\",\"小程序、算法流程清晰的系统\",\"中大型系统、复杂业务逻辑建模\",\"代表语言\",\"C、汇编、早期 Pascal\",\"Java、C++、Python、C#\",\"OOP 的三大特征\",\"封装：把数据和操作封装在对象中，不允许外部对象直接访问对象内部的信息，但对外暴露接口，提供一些可以被外界访问的方法来操作属性。\",\"继承：使用已存在的类的定义作为基础建立新类的技术，新类的定义可以增加新的数据或新的功能，也可以用父类的功能，但不能选择性地继承父类。\",\"⚠️关于继承，注意以下几点：\",\"子类拥有父类对象所有的属性和方法（包括私有属性和私有方法），但是父类中的私有属性和方法子类是无法访问，只是拥有。\",\"子类可以拥有自己属性和方法，即子类可以对父类进行扩展。\",\"子类可以用自己的方式实现父类的方法。\",\"多态：一个对象具有多种的状态，具体的表现为父类的引用指向子类对象的实例，动态绑定调用方法。\",\"Animal animal = new Dog(); // Animal 是父类，Dog 是它的子类\",\"⚠️关于多态，注意以下几点：\",\"对象类型和引用类型之间具有继承（类）/实现（接口）的关系；\",\"引用类型变量发出的方法调用的到底是哪个类中的方法，必须在程序运行期间才能确定；\",\"多态不能调用“只在子类存在但在父类不存在”的方法；\",\"如果子类重写了父类的方法，真正执行的是子类重写的方法，如果子类没有重写父类的方法，执行的是父类的方法。\"]},\"36\":{\"h\":\"接口与抽象类\"},\"37\":{\"h\":\"抽象类\",\"t\":[\"抽象类（abstract class） 是一种不能被实例化的类，用来被子类继承并扩展，其主要作用是为一组子类提供共同的属性、行为或接口定义。子类继承抽象类时，子类必须实现父类中定义的抽象方法。\",\"如果一个抽象类 A，继承一个抽象类 B，此时不需要重写 B 中的抽象方法，但当 A 被继承时，A 的子类还是要重写 B 中的抽象方法。\",\"abstract class 类名 { // 成员变量 // 构造方法（可有） // 普通方法（可实现） // 抽象方法（无方法体，至少有一个） }\"]},\"38\":{\"h\":\"接口\",\"t\":[\"接口通过 interface 关键字来定义，它可以包含一些常量和方法，如下所示：\",\"public interface BasketballPlayer { // 常量 String NAME = \\\"Shawn\\\"; // 抽象方法 String getName(); // 静态方法 static boolean isTrue(String name) { return name.equals(NAME); } // 默认方法 default void printBasketball(){ System.out.println(\\\"篮球\\\"); } }\",\"反编译这段代码的字节码后，如下所示：\",\"public interface BasketballPlayer { public static final String NAME; public abstract String getName(); public static boolean isTrue(String); public void printBasketball(); }\",\"可以发现以下几点：\",\"没有 private、default 或者 static 修饰的方法是隐式抽象的，会自动加上 public abstract 修饰符，正如上例中的 getName 方法，其实是一个抽象方法 —— 这便是定义接口的意义。\",\"接口中定义的变量默认是用 public static final 修饰的。\",\"Java 官方文档上有这样的声明：\",\"Every field declaration in the body of an interface is implicitly public, static, and final.\",\"因此，接口可以用来作为常量类使用，还能省略掉 public static final。\",\"从 Java 8 开始，接口中允许引入静态方法，比如上例中的 isTrue() 方法，这允许我们可以在接口中提供一些与接口本身紧密关联的实用的辅助方法，而不必创建一个单独的工具类来存放这些方法，从而提高提高内聚性。\",\"因此，接口中的 static 方法必须要有方法体：\",\"接口中的 static 方法要有方法体\",\"从 Java 8 开始，接口中允许定义 default 方法，比如上例中的 printBasketball() 方法。\",\"为什么需要 default 方法？\",\"在 Java 8 之前，如果我们修改了一个接口（例如，添加了一个新方法），所有实现该接口的类都必须同时修改，以实现这个新方法。这在大型项目中，尤其是当接口被许多不同的模块或第三方库实现时，会成为一个巨大的问题，因为这将导致大量的代码修改和兼容性问题。\",\"default 方法的出现解决了这个问题。它允许我们在接口中定义带有默认实现的方法。这意味着，如果一个实现类没有提供自己的实现，它将自动继承接口中提供的默认实现，而不需要修改代码。这使得接口的演进变得更加平滑和安全。\",\"因此，接口中的 default 方法也必须要有方法体：\",\"接口中的 default 方法要有方法体\",\"从 Java 9 开始，接口中允许定义 private 方法来封装一些重复的逻辑，供默认方法和静态方法调用，提高代码的可读性和可维护性。\",\"接口不可以被实例化，也就是说接口不能有静态代码块和构造方法。\"]},\"39\":{\"h\":\"两者的区别\",\"t\":[\"语法层面：\",\"继承和实现：一个类只能继承一个类（包括抽象类），因为 Java 不支持多继承。但一个类可以实现多个接口，一个接口也可以继承多个其他接口。\",\"成员变量：接口中的成员变量只能是 public static final 类型的，不能被修改且必须有初始值。抽象类的成员变量可以有任何修饰符（private, protected, public），可以在子类中被重新定义或赋值。\",\"方法：Java 8 之前，接口中的方法默认是 public abstract ，也就是只能有方法声明。自 Java 8 起，可以在接口中定义 default（默认） 方法和 static （静态）方法。 自 Java 9 起，接口可以包含 private 方法。抽象类可以包含抽象方法和非抽象方法。抽象方法没有方法体，必须在子类中实现。非抽象方法有具体实现，可以直接在抽象类中使用或在子类中重写。\",\"设计层面：\",\"接口的核心设计理念是契约或者能力，它定义了一组对象可以拥有的公共行为的规范（What），而不关心这些行为是如何实现的。接口的关注点是行为的抽象，它描述了一个类能做什么，通常用于标识一种 has-a 的关系。\",\"抽象类的核心设计理念是模版或者骨架，它提供了一个部分实现的基类（可能包含具体方法和抽象方法），旨在被子类继承和扩展（How + What）。抽象类通常用于标识一种 is-a 的关系，即子类是抽象类的一种特殊类型。它不仅定义了 “我能做什么”，还可能提供了 “我如何做一部分”。\",\"举个栗子🌰：\",\"比如一个物流派送系统中，多种类型的运输工具，比如：卡车、货轮、飞机、无人机等等。\",\"我们可以用接口定义 “能力” —— 比如 “可以飞”（Flyable）、“可以装货”（Loadable），我们不用关心对象是飞机还是鸟还是无人机，只要能飞，就实现 Flyable；只要能装货，就实现 Loadable。\",\"public interface Flyable { void fly(); } public interface Loadable { void loadCargo(double weight); }\",\"我们可以用抽象类定义 “模版” —— 比如 “运输工具”（TransportVehicle），这个抽象类描述的是 “所有运输工具的通用部分”，比如都有一个司机、都需要执行送货操作，属于 “是一种运输工具”的类型关系，是一个继承体系。\",\"public abstract class TransportVehicle { protected String id; protected String driver; public void assignDriver(String driverName) { this.driver = driverName; } public abstract void deliver(String destination); }\",\"🚛卡车 Truck：\",\"public class Truck extends TransportVehicle implements Loadable { @Override public void deliver(String destination) { System.out.println(\\\"Truck delivering to \\\" + destination); } @Override public void loadCargo(double weight) { System.out.println(\\\"Truck loaded with \\\" + weight + \\\"kg\\\"); } }\",\"🚁无人机：\",\"public class Drone extends TransportVehicle implements Flyable, Loadable { @Override public void deliver(String destination) { System.out.println(\\\"Drone flying to \\\" + destination); } @Override public void fly() { System.out.println(\\\"Drone taking off...\\\"); } @Override public void loadCargo(double weight) { System.out.println(\\\"Drone loaded with \\\" + weight + \\\"kg\\\"); } }\"]},\"40\":{\"h\":\"深拷贝和浅拷贝\"},\"41\":{\"h\":\"浅拷贝\",\"t\":[\"浅拷贝会在堆上创建一个新的对象（区别于引用拷贝：两个不同的引用指向同一个对象），这个新对象里的基本数据类型和对应的包装数据类型以及不可变对象 String 成员是原对象值的副本，而引用类型成员（比如对象、数组）仅仅是复制了引用地址，这意味着原对象和新对象会共享这些引用类型成员指向的内存空间（指向同一个堆内容中的引用类型成员）。\",\"class Subject { String name; public Subject(String name) { this.name = name; } } class Student implements Cloneable { String studentName; // 不可变对象 Subject subject; // 引用类型成员 int age; // 基本数据类型 Integer height; // 包装数据类型 public Student(String studentName, String subjectName, int age, Integer height) { this.studentName = studentName; this.subject = new Subject(subjectName); this.age = age; this.height = height; } @Override protected Object clone() throws CloneNotSupportedException { return super.clone(); // 执行浅拷贝 } public void display() { System.out.println(\\\"学生姓名: \\\" + studentName + \\\", 科目: \\\" + subject.name + \\\", 年龄: \\\" + age + \\\", 身高: \\\" + height); System.out.println(\\\"Subject 对象内存地址: \\\" + subject.hashCode()); } } public class ShallowCopyDemo { public static void main(String[] args) { try { Student originalStudent = new Student(\\\"张三\\\", \\\"数学\\\", 18, 175); System.out.println(\\\"原始学生信息:\\\"); originalStudent.display(); Student clonedStudent = (Student) originalStudent.clone(); // 浅拷贝 System.out.println(\\\"\\\\n拷贝学生信息 (浅拷贝后):\\\"); clonedStudent.display(); // 修改拷贝对象的引用类型成员 clonedStudent.studentName = \\\"李四\\\"; // 不可变类型修改，互不影响 clonedStudent.subject.name = \\\"物理\\\"; // 引用类型修改，会影响原对象 clonedStudent.age = 21; // 基本类型修改，互不影响 clonedStudent.height = 180; // 包装类型修改，互不影响 System.out.println(\\\"\\\\n修改拷贝对象后:\\\"); System.out.println(\\\"原始学生信息:\\\"); originalStudent.display(); // 注意：原对象的科目也变成了“物理” System.out.println(\\\"拷贝学生信息:\\\"); clonedStudent.display(); } catch (CloneNotSupportedException e) { e.printStackTrace(); } } }\",\"运行结果：\",\"原始学生信息: 学生姓名: 张三, 科目: 数学, 年龄: 18, 身高: 175 Subject 对象内存地址: 356573597 拷贝学生信息 (浅拷贝后): 学生姓名: 张三, 科目: 数学, 年龄: 18, 身高: 175 Subject 对象内存地址: 356573597 修改拷贝对象后: 原始学生信息: 学生姓名: 张三, 科目: 物理, 年龄: 18, 身高: 175 <-- 原对象的科目也变成了“物理” Subject 对象内存地址: 356573597 拷贝学生信息: 学生姓名: 李四, 科目: 物理, 年龄: 21, 身高: 180 Subject 对象内存地址: 356573597\",\"可以看到，originalStudent 和 clonedStudent 的 subject 成员指向了同一个 Subject 对象，所以修改其中一个会导致另一个也受影响；而 studentName、age 和 height 则相互独立，互不影响。\",\"浅拷贝 —— 引用的 Subject 对象共享\"]},\"42\":{\"h\":\"深拷贝\",\"t\":[\"深拷贝不仅会复制对象本身，还会递归地复制其内部所有引用的对象。这意味着原对象和新对象在内存中是完全独立的，没有任何共享的引用。\",\"常见的深拷贝的实现方式：\",\"递归实现 clone()： 在 clone() 方法中，除了调用 super.clone() 进行浅拷贝外，还要手动对其所有引用类型成员调用它们的 clone() 方法，确保它们也被完全复制。这种方式要求所有涉及到拷贝的类都实现 Cloneable 接口。\",\"序列化和反序列化： 将对象先序列化成字节流，再从字节流反序列化回来。这种方式会创建全新的对象图，是实现深拷贝的一种简单有效的方法，但需要类实现 Serializable 接口，并且会有一定的性能开销。\",\"构造器或工厂方法： 手动编写代码，在构造新对象时，创建所有引用类型成员的新实例并拷贝数据。\",\"下面是使用递归的方式实现的深拷贝：\",\"class SubjectDeep implements Cloneable { String name; public SubjectDeep(String name) { this.name = name; } @Override protected Object clone() throws CloneNotSupportedException { return super.clone(); // SubjectDeep 自身也需要浅拷贝 } } class StudentDeep implements Cloneable { String studentName; SubjectDeep subject; // 引用类型成员 int age; Integer height; public StudentDeep(String studentName, String subjectName, int age, Integer height) { this.studentName = studentName; this.subject = new SubjectDeep(subjectName); this.age = age; this.height = height; } // 深拷贝实现 @Override protected Object clone() throws CloneNotSupportedException { StudentDeep clonedStudent = (StudentDeep) super.clone(); // 首先进行浅拷贝 // 关键步骤：手动对引用类型成员进行深拷贝 clonedStudent.subject = (SubjectDeep) subject.clone(); return clonedStudent; } public void display() { System.out.println(\\\"学生姓名: \\\" + studentName + \\\", 科目: \\\" + subject.name + \\\", 年龄: \\\" + age + \\\", 身高: \\\" + height); System.out.println(\\\"SubjectDeep 对象内存地址: \\\" + subject.hashCode()); } } public class DeepCopyDemo { public static void main(String[] args) { try { StudentDeep originalStudent = new StudentDeep(\\\"张三\\\", \\\"数学\\\", 18, 175); System.out.println(\\\"原始学生信息:\\\"); originalStudent.display(); StudentDeep clonedStudent = (StudentDeep) originalStudent.clone(); // 深拷贝 System.out.println(\\\"\\\\n拷贝学生信息 (深拷贝后):\\\"); clonedStudent.display(); // 修改拷贝对象的引用类型成员 clonedStudent.studentName = \\\"李四\\\"; clonedStudent.subject.name = \\\"物理\\\"; clonedStudent.age = 21; clonedStudent.height = 180; System.out.println(\\\"\\\\n修改拷贝对象后:\\\"); System.out.println(\\\"原始学生信息:\\\"); originalStudent.display(); // 注意：原对象的科目**没有**被修改 System.out.println(\\\"拷贝学生信息:\\\"); clonedStudent.display(); } catch (CloneNotSupportedException e) { e.printStackTrace(); } } }\",\"运行结果：\",\"原始学生信息: 学生姓名: 张三, 科目: 数学, 年龄: 18, 身高: 175 SubjectDeep 对象内存地址: 356573597 拷贝学生信息 (深拷贝后): 学生姓名: 张三, 科目: 数学, 年龄: 18, 身高: 175 SubjectDeep 对象内存地址: 1735600054 <-- 地址不同了 修改拷贝对象后: 原始学生信息: 学生姓名: 张三, 科目: 数学, 年龄: 18, 身高: 175 <-- 原始对象的科目未被修改 SubjectDeep 对象内存地址: 356573597 拷贝学生信息: 学生姓名: 李四, 科目: 物理, 年龄: 21, 身高: 180 SubjectDeep 对象内存地址: 1735600054\",\"现在，修改 clonedStudent 的 subject 不会影响 originalStudent 的 subject，因为 clonedStudent.subject 是一个全新的 SubjectDeep 对象，在内存中与原对象是完全独立的。\",\"深拷贝 —— 引用的 Subject 对象不共享\"]},\"43\":{\"h\":\"两者对比\",\"t\":[\"特性\",\"浅拷贝（Shallow Copy）\",\"深拷贝（Deep Copy）\",\"拷贝深度\",\"只拷贝对象本身，不拷贝其内部引用的对象。\",\"递归地拷贝对象本身及其所有内部引用的对象。\",\"独立性\",\"原始对象和拷贝对象共享引用类型成员。\",\"原始对象和拷贝对象完全独立。\",\"修改影响\",\"修改拷贝对象的引用类型成员，会影响原始对象。\",\"修改拷贝对象的任何成员，不影响原始对象。\",\"适用场景\",\"1. 对象只包含基本数据类型及其对应包装类型。 2. 对象包含不可变对象（如 String）。 3. 你可以接受共享引用类型成员的风险，或不需要修改它们。\",\"1. 对象包含可变的引用类型成员。 2. 需要确保原对象和拷贝对象完全隔离，修改互不影響。\",\"实现复杂性\",\"简单，直接调用 super.clone()。\",\"复杂，需要递归拷贝所有层级的引用对象。\"]},\"44\":{\"h\":\"Java集合 1\"},\"45\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"46\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"47\":{\"h\":\"Java 集合2\"},\"48\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"49\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"50\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"51\":{\"h\":\"Mysql\"},\"52\":{\"h\":\"Database\"},\"53\":{\"h\":\"Redis\"},\"54\":{\"h\":\"Basis\"},\"55\":{\"h\":\"Java\"},\"56\":{\"h\":\"Collection\"}},\"dirtCount\":0,\"index\":[[\"redis\",{\"0\":{\"53\":1}}],[\"return\",{\"0\":{\"30\":1},\"1\":{\"24\":2,\"30\":6,\"38\":1,\"41\":1,\"42\":2}}],[\"层级\",{\"1\":{\"43\":1}}],[\"层面\",{\"1\":{\"29\":1,\"39\":2}}],[\"影響\",{\"1\":{\"43\":1}}],[\"影响\",{\"1\":{\"6\":1,\"25\":1,\"41\":6,\"42\":1,\"43\":3}}],[\"隔离\",{\"1\":{\"43\":1}}],[\"风险\",{\"1\":{\"43\":1}}],[\"及其\",{\"1\":{\"43\":2}}],[\"未\",{\"1\":{\"42\":1}}],[\"未来\",{\"1\":{\"6\":2}}],[\"首先\",{\"1\":{\"42\":1}}],[\"开销\",{\"1\":{\"42\":1}}],[\"开始\",{\"1\":{\"6\":3,\"33\":1,\"38\":3}}],[\"简单\",{\"1\":{\"42\":1,\"43\":1}}],[\"简历\",{\"1\":{\"6\":1}}],[\"全新\",{\"1\":{\"42\":2}}],[\"回来\",{\"1\":{\"42\":1}}],[\"回收\",{\"1\":{\"31\":1}}],[\"流反\",{\"1\":{\"42\":1}}],[\"流\",{\"1\":{\"42\":1}}],[\"流程\",{\"1\":{\"35\":2}}],[\"序列\",{\"1\":{\"42\":1}}],[\"序列化\",{\"1\":{\"42\":3}}],[\"完全\",{\"1\":{\"42\":3,\"43\":2}}],[\"完成\",{\"1\":{\"29\":2}}],[\"递归\",{\"1\":{\"42\":3,\"43\":2}}],[\"独立性\",{\"1\":{\"43\":1}}],[\"独立\",{\"1\":{\"41\":1,\"42\":2,\"43\":1}}],[\"另\",{\"1\":{\"41\":1}}],[\"另外\",{\"1\":{\"33\":1}}],[\"物理\",{\"1\":{\"41\":5,\"42\":2}}],[\"物流\",{\"1\":{\"39\":1}}],[\"互不\",{\"1\":{\"41\":4,\"43\":1}}],[\"互联网\",{\"1\":{\"6\":2}}],[\"李四\",{\"1\":{\"41\":2,\"42\":2}}],[\"张三\",{\"1\":{\"41\":4,\"42\":4}}],[\"年龄\",{\"1\":{\"41\":5,\"42\":5}}],[\"科目\",{\"1\":{\"41\":7,\"42\":7}}],[\"科吗\",{\"1\":{\"6\":1}}],[\"姓名\",{\"1\":{\"41\":5,\"42\":5}}],[\"副本\",{\"1\":{\"41\":1}}],[\"浅\",{\"0\":{\"40\":1,\"41\":1},\"1\":{\"41\":6,\"42\":3,\"43\":1}}],[\"拷贝\",{\"0\":{\"40\":2,\"41\":1,\"42\":1},\"1\":{\"41\":14,\"42\":22,\"43\":12}}],[\"深度\",{\"1\":{\"43\":1}}],[\"深\",{\"0\":{\"40\":1,\"42\":1},\"1\":{\"42\":10,\"43\":1}}],[\"深深\",{\"1\":{\"6\":1}}],[\"kg\",{\"1\":{\"39\":2}}],[\"@\",{\"1\":{\"39\":5,\"41\":1,\"42\":2}}],[\"送货\",{\"1\":{\"39\":1}}],[\"司机\",{\"1\":{\"39\":1}}],[\"鸟\",{\"1\":{\"39\":1}}],[\"装货\",{\"1\":{\"39\":2}}],[\"装箱\",{\"1\":{\"25\":4}}],[\"飞\",{\"1\":{\"39\":1}}],[\"飞机\",{\"1\":{\"39\":2}}],[\"货轮\",{\"1\":{\"39\":1}}],[\"卡车\",{\"1\":{\"39\":2}}],[\"派送\",{\"1\":{\"39\":1}}],[\"栗子\",{\"1\":{\"39\":1}}],[\"旨在\",{\"1\":{\"39\":1}}],[\"骨架\",{\"1\":{\"39\":1}}],[\"描述\",{\"1\":{\"39\":2}}],[\"with\",{\"1\":{\"39\":2}}],[\"weight\",{\"1\":{\"39\":5}}],[\"what\",{\"1\":{\"39\":2}}],[\"wrapper\",{\"1\":{\"25\":1}}],[\"规范\",{\"1\":{\"39\":1}}],[\"公共\",{\"1\":{\"39\":1}}],[\"公开\",{\"1\":{\"35\":1}}],[\"契约\",{\"1\":{\"39\":1}}],[\"理念\",{\"1\":{\"39\":2}}],[\"核心\",{\"1\":{\"39\":2}}],[\"核心思想\",{\"1\":{\"35\":1}}],[\"设计\",{\"1\":{\"39\":3}}],[\"起\",{\"1\":{\"39\":2}}],[\"起步\",{\"1\":{\"6\":1}}],[\"供\",{\"1\":{\"38\":1}}],[\"9\",{\"1\":{\"38\":1,\"39\":1}}],[\"9223372036854775807\",{\"1\":{\"23\":1}}],[\"9223372036854775808\",{\"1\":{\"23\":1}}],[\"安全\",{\"1\":{\"38\":1}}],[\"平滑\",{\"1\":{\"38\":1}}],[\"平时\",{\"1\":{\"6\":1}}],[\"演进\",{\"1\":{\"38\":1}}],[\"使得\",{\"1\":{\"38\":1}}],[\"使用\",{\"1\":{\"23\":2,\"24\":4,\"25\":2,\"26\":1,\"28\":4,\"29\":2,\"30\":1,\"31\":1,\"32\":4,\"33\":3,\"35\":1,\"38\":1,\"39\":1,\"42\":1}}],[\"兼容性问题\",{\"1\":{\"38\":1}}],[\"巨大\",{\"1\":{\"38\":1}}],[\"库\",{\"1\":{\"38\":1}}],[\"第三方\",{\"1\":{\"38\":1}}],[\"许多\",{\"1\":{\"38\":1}}],[\"尤其\",{\"1\":{\"38\":1}}],[\"添加\",{\"1\":{\"38\":1}}],[\"例如\",{\"1\":{\"38\":1}}],[\"例子\",{\"1\":{\"26\":1}}],[\"工厂\",{\"1\":{\"42\":1}}],[\"工具\",{\"1\":{\"38\":1}}],[\"工作\",{\"1\":{\"6\":3}}],[\"辅助\",{\"1\":{\"38\":1}}],[\"引入\",{\"1\":{\"38\":1}}],[\"引用\",{\"1\":{\"24\":2,\"25\":1,\"31\":1,\"35\":3,\"41\":10,\"42\":8,\"43\":7}}],[\"掉\",{\"1\":{\"38\":1}}],[\"省略\",{\"1\":{\"38\":1}}],[\"官方\",{\"1\":{\"38\":1}}],[\"便是\",{\"1\":{\"38\":1}}],[\"—\",{\"1\":{\"38\":2,\"39\":4,\"41\":2,\"42\":2}}],[\"隐式\",{\"1\":{\"38\":1}}],[\"码后\",{\"1\":{\"38\":1}}],[\"至少\",{\"1\":{\"37\":1}}],[\"至此\",{\"1\":{\"6\":2}}],[\"普通\",{\"1\":{\"37\":1}}],[\"共同\",{\"1\":{\"37\":1}}],[\"共享\",{\"1\":{\"31\":1,\"33\":1,\"41\":2,\"42\":2,\"43\":2}}],[\"”\",{\"1\":{\"35\":1,\"39\":9,\"41\":2}}],[\"哪个\",{\"1\":{\"35\":1}}],[\"绑定\",{\"1\":{\"35\":1}}],[\"动态\",{\"1\":{\"35\":1}}],[\"私有\",{\"1\":{\"35\":3}}],[\"拥有\",{\"1\":{\"35\":3,\"39\":1}}],[\"选择性\",{\"1\":{\"35\":1}}],[\"功能\",{\"1\":{\"35\":2}}],[\"功夫不负有心人\",{\"1\":{\"6\":1}}],[\"增加\",{\"1\":{\"35\":1}}],[\"增长\",{\"1\":{\"6\":1}}],[\"暴露\",{\"1\":{\"35\":1}}],[\"特性\",{\"1\":{\"43\":1}}],[\"特殊\",{\"1\":{\"39\":1}}],[\"特征\",{\"1\":{\"35\":1}}],[\"特定\",{\"1\":{\"24\":1,\"30\":1,\"33\":1}}],[\"汇编\",{\"1\":{\"35\":1}}],[\"语法\",{\"1\":{\"39\":1}}],[\"语言\",{\"1\":{\"35\":1}}],[\"语句\",{\"1\":{\"30\":1}}],[\"代表\",{\"1\":{\"35\":1}}],[\"代码\",{\"1\":{\"6\":1,\"31\":1,\"33\":1,\"38\":5,\"42\":1}}],[\"建立\",{\"1\":{\"35\":1}}],[\"建模\",{\"1\":{\"35\":1}}],[\"建议\",{\"1\":{\"32\":2}}],[\"业务\",{\"1\":{\"35\":1}}],[\"复制\",{\"1\":{\"41\":1,\"42\":3}}],[\"复杂性\",{\"1\":{\"43\":1}}],[\"复杂\",{\"1\":{\"35\":1,\"43\":1}}],[\"复用\",{\"1\":{\"35\":2}}],[\"复习\",{\"1\":{\"6\":1}}],[\"性\",{\"1\":{\"35\":1}}],[\"性能\",{\"1\":{\"24\":1,\"25\":2,\"42\":1}}],[\"扩展\",{\"1\":{\"35\":2,\"37\":1,\"39\":1}}],[\"扩展性\",{\"1\":{\"35\":1}}],[\"易于\",{\"1\":{\"35\":1}}],[\"强\",{\"1\":{\"35\":1}}],[\"模版\",{\"1\":{\"39\":2}}],[\"模块\",{\"1\":{\"38\":1}}],[\"模块化\",{\"1\":{\"35\":1}}],[\"模式\",{\"1\":{\"33\":1}}],[\"难度\",{\"1\":{\"35\":1}}],[\"紧密\",{\"1\":{\"35\":1,\"38\":1}}],[\"维护\",{\"1\":{\"35\":1}}],[\"维护性\",{\"1\":{\"35\":1}}],[\"维度\",{\"1\":{\"25\":1}}],[\"封装\",{\"1\":{\"35\":3,\"38\":1}}],[\"步骤\",{\"1\":{\"35\":1}}],[\"步入\",{\"1\":{\"6\":1}}],[\"组织\",{\"1\":{\"35\":1}}],[\"范式\",{\"1\":{\"35\":1}}],[\"范围\",{\"1\":{\"23\":1,\"24\":6,\"25\":1,\"32\":2}}],[\"体系\",{\"1\":{\"39\":1}}],[\"体\",{\"1\":{\"33\":1,\"37\":1,\"38\":4,\"39\":1}}],[\"抽象\",{\"1\":{\"33\":2,\"37\":4,\"38\":3,\"39\":6}}],[\"抽象类\",{\"0\":{\"36\":1,\"37\":1},\"1\":{\"33\":2,\"37\":4,\"39\":9}}],[\"线程\",{\"1\":{\"33\":1}}],[\"程序运行\",{\"1\":{\"35\":1}}],[\"程序\",{\"1\":{\"35\":3}}],[\"程\",{\"1\":{\"33\":1}}],[\"控制线\",{\"1\":{\"33\":1}}],[\"错误\",{\"1\":{\"33\":3}}],[\"常见\",{\"1\":{\"35\":1,\"42\":1}}],[\"常量\",{\"1\":{\"33\":1,\"38\":3}}],[\"常用\",{\"1\":{\"28\":1}}],[\"taking\",{\"1\":{\"39\":1}}],[\"to\",{\"1\":{\"39\":2}}],[\"try\",{\"1\":{\"41\":1,\"42\":1}}],[\"truck\",{\"1\":{\"39\":4}}],[\"true\",{\"1\":{\"23\":2,\"24\":3,\"26\":1}}],[\"transportvehicle\",{\"1\":{\"39\":4}}],[\"throws\",{\"1\":{\"41\":1,\"42\":2}}],[\"the\",{\"1\":{\"38\":1}}],[\"this\",{\"1\":{\"33\":2,\"39\":1,\"41\":5,\"42\":5}}],[\"void\",{\"1\":{\"33\":10,\"38\":2,\"39\":9,\"41\":2,\"42\":2}}],[\"value\",{\"1\":{\"30\":1}}],[\"valueof\",{\"1\":{\"24\":3}}],[\"mysql\",{\"0\":{\"51\":1}}],[\"myclass\",{\"1\":{\"33\":14}}],[\"method2\",{\"1\":{\"33\":1}}],[\"method1\",{\"1\":{\"33\":1}}],[\"method\",{\"1\":{\"33\":2}}],[\"main\",{\"1\":{\"33\":6,\"41\":1,\"42\":1}}],[\"math\",{\"1\":{\"26\":1}}],[\"map\",{\"1\":{\"24\":1}}],[\"“\",{\"1\":{\"33\":2,\"35\":1,\"39\":9,\"41\":2}}],[\"称为\",{\"1\":{\"33\":1}}],[\"称得上\",{\"1\":{\"6\":1}}],[\"嵌套\",{\"1\":{\"33\":2}}],[\"顶级\",{\"1\":{\"33\":2}}],[\"声明\",{\"1\":{\"32\":1,\"33\":1,\"38\":1,\"39\":1}}],[\"则\",{\"1\":{\"32\":1,\"33\":1,\"41\":1}}],[\"异常\",{\"1\":{\"32\":1}}],[\"抛出\",{\"1\":{\"32\":1}}],[\"列表\",{\"1\":{\"32\":1}}],[\"编程\",{\"1\":{\"35\":2}}],[\"编写\",{\"1\":{\"32\":1,\"42\":1}}],[\"编译器\",{\"1\":{\"29\":1}}],[\"编译\",{\"1\":{\"23\":1}}],[\"逻辑\",{\"1\":{\"32\":1,\"35\":1,\"38\":1}}],[\"传入\",{\"1\":{\"33\":1}}],[\"传\",{\"1\":{\"32\":1}}],[\"传递\",{\"1\":{\"25\":1}}],[\"覆盖\",{\"1\":{\"32\":1}}],[\"响应\",{\"1\":{\"32\":1}}],[\"父类\",{\"1\":{\"32\":8,\"35\":12,\"37\":1}}],[\"继承\",{\"1\":{\"32\":1,\"33\":3,\"35\":5,\"37\":4,\"38\":1,\"39\":6}}],[\"继续执行\",{\"1\":{\"30\":1}}],[\"继续\",{\"1\":{\"6\":1,\"30\":1}}],[\"子类\",{\"1\":{\"32\":5,\"33\":1,\"35\":11,\"37\":4,\"39\":4}}],[\"输入\",{\"1\":{\"32\":2}}],[\"输出\",{\"1\":{\"26\":2,\"33\":1}}],[\"根据\",{\"1\":{\"32\":2}}],[\"同时\",{\"1\":{\"38\":1}}],[\"同步\",{\"1\":{\"33\":1}}],[\"同一时间\",{\"1\":{\"33\":1}}],[\"同一\",{\"1\":{\"33\":2}}],[\"同一个\",{\"1\":{\"32\":2,\"41\":3}}],[\"同名\",{\"1\":{\"32\":1}}],[\"同样\",{\"1\":{\"32\":1}}],[\"同学\",{\"1\":{\"6\":3}}],[\"即\",{\"1\":{\"32\":2,\"33\":3,\"35\":1,\"39\":1}}],[\"即将\",{\"1\":{\"6\":1}}],[\"允许\",{\"1\":{\"32\":3,\"33\":1,\"35\":1,\"38\":5}}],[\"限制\",{\"1\":{\"32\":2}}],[\"因此\",{\"1\":{\"32\":1,\"38\":3}}],[\"因为\",{\"1\":{\"6\":2,\"29\":1,\"31\":1,\"38\":1,\"39\":1,\"42\":1}}],[\"混淆\",{\"1\":{\"32\":1}}],[\"造成\",{\"1\":{\"32\":1}}],[\"名\",{\"1\":{\"32\":6}}],[\"去\",{\"1\":{\"32\":1}}],[\"去年\",{\"1\":{\"6\":1}}],[\"化成\",{\"1\":{\"42\":1}}],[\"化\",{\"1\":{\"32\":1,\"33\":1,\"37\":1,\"38\":1}}],[\"访问\",{\"1\":{\"32\":10,\"33\":10,\"35\":4}}],[\"非常容易\",{\"1\":{\"32\":1}}],[\"非\",{\"1\":{\"32\":4,\"33\":2,\"39\":2}}],[\"非法操作\",{\"1\":{\"32\":1}}],[\"非法\",{\"1\":{\"24\":1}}],[\"销毁\",{\"1\":{\"31\":1}}],[\"消亡\",{\"1\":{\"31\":1}}],[\"生存\",{\"1\":{\"31\":1}}],[\"生活\",{\"1\":{\"6\":7}}],[\"虚拟机\",{\"1\":{\"31\":1}}],[\"具体方法\",{\"1\":{\"39\":1}}],[\"具体\",{\"1\":{\"31\":1,\"35\":1,\"39\":1}}],[\"具有\",{\"1\":{\"29\":1,\"35\":2}}],[\"级别\",{\"1\":{\"31\":1,\"33\":2}}],[\"修饰符\",{\"0\":{\"33\":1},\"1\":{\"32\":3,\"33\":5,\"38\":1,\"39\":1}}],[\"修饰\",{\"1\":{\"31\":1,\"32\":1,\"33\":6,\"38\":2}}],[\"修改\",{\"1\":{\"24\":1,\"35\":1,\"38\":4,\"39\":1,\"41\":8,\"42\":6,\"43\":5}}],[\"静态方法\",{\"1\":{\"32\":11,\"33\":5,\"38\":3}}],[\"静态\",{\"1\":{\"31\":1,\"32\":6,\"33\":6,\"38\":1,\"39\":1}}],[\"属性\",{\"1\":{\"31\":1,\"35\":6,\"37\":1}}],[\"属于\",{\"1\":{\"31\":2,\"32\":5,\"33\":2,\"39\":1}}],[\"块\",{\"1\":{\"31\":1,\"33\":4,\"38\":1}}],[\"器\",{\"1\":{\"31\":1,\"42\":1}}],[\"外界\",{\"1\":{\"35\":1}}],[\"外部\",{\"1\":{\"32\":1,\"35\":1}}],[\"外\",{\"1\":{\"31\":1,\"42\":1}}],[\"定义\",{\"1\":{\"31\":1,\"33\":3,\"35\":2,\"37\":1,\"38\":6,\"39\":5}}],[\"定位\",{\"1\":{\"6\":1}}],[\"项\",{\"1\":{\"31\":1,\"35\":1}}],[\"项目\",{\"1\":{\"6\":2}}],[\"局部变量\",{\"1\":{\"31\":4}}],[\"局限性\",{\"1\":{\"6\":1}}],[\"函数\",{\"1\":{\"30\":2,\"33\":1,\"35\":4}}],[\"跳出\",{\"1\":{\"30\":3}}],[\"指向\",{\"1\":{\"35\":1,\"41\":4}}],[\"指\",{\"1\":{\"30\":2}}],[\"指令\",{\"1\":{\"29\":2}}],[\"关心\",{\"1\":{\"39\":2}}],[\"关联\",{\"1\":{\"38\":1}}],[\"关键步骤\",{\"1\":{\"42\":1}}],[\"关键字\",{\"1\":{\"38\":1}}],[\"关键词\",{\"1\":{\"30\":1}}],[\"关于\",{\"1\":{\"35\":2}}],[\"关注\",{\"1\":{\"35\":2}}],[\"关注点\",{\"1\":{\"35\":1,\"39\":1}}],[\"关系\",{\"1\":{\"26\":1,\"35\":1,\"39\":3}}],[\"几个\",{\"1\":{\"30\":1}}],[\"终止\",{\"1\":{\"30\":1}}],[\"某个\",{\"1\":{\"32\":1,\"33\":1}}],[\"某种\",{\"1\":{\"30\":1}}],[\"某些\",{\"1\":{\"24\":1}}],[\"达到\",{\"1\":{\"30\":1}}],[\"次数\",{\"1\":{\"30\":1}}],[\"次方\",{\"1\":{\"29\":2}}],[\"满足\",{\"1\":{\"30\":1}}],[\"条件\",{\"1\":{\"30\":2}}],[\"其中\",{\"1\":{\"41\":1}}],[\"其他\",{\"1\":{\"33\":4,\"39\":1}}],[\"其\",{\"1\":{\"29\":1,\"33\":1,\"37\":1,\"42\":2,\"43\":1}}],[\"其实\",{\"1\":{\"6\":2,\"38\":1}}],[\"本类\",{\"1\":{\"32\":1}}],[\"本身\",{\"1\":{\"29\":1,\"38\":1,\"42\":1,\"43\":2}}],[\"本科\",{\"1\":{\"6\":1}}],[\"改变\",{\"1\":{\"29\":1,\"33\":2}}],[\"改为\",{\"1\":{\"24\":1}}],[\"%\",{\"1\":{\"29\":1}}],[\"求余\",{\"1\":{\"29\":1}}],[\"超过\",{\"1\":{\"29\":1}}],[\"变\",{\"1\":{\"41\":3,\"43\":1}}],[\"变得\",{\"1\":{\"38\":1}}],[\"变成\",{\"1\":{\"29\":1,\"41\":2}}],[\"变量\",{\"0\":{\"31\":1},\"1\":{\"28\":2,\"29\":1,\"31\":6,\"32\":2,\"33\":14,\"35\":1,\"37\":1,\"38\":1,\"39\":3}}],[\"仅仅\",{\"1\":{\"41\":1}}],[\"仅\",{\"1\":{\"29\":1}}],[\"移动\",{\"1\":{\"29\":1}}],[\"移位\",{\"0\":{\"29\":1},\"1\":{\"29\":9}}],[\"右\",{\"1\":{\"29\":1}}],[\"右移\",{\"1\":{\"29\":5}}],[\"负数\",{\"1\":{\"29\":1}}],[\"符号\",{\"1\":{\"29\":5}}],[\"补码\",{\"1\":{\"29\":1}}],[\"补\",{\"1\":{\"29\":5}}],[\"补零\",{\"1\":{\"29\":1}}],[\"溢出\",{\"1\":{\"29\":1}}],[\"低位\",{\"1\":{\"29\":2}}],[\"丢弃\",{\"1\":{\"29\":2}}],[\"丢失\",{\"0\":{\"26\":1},\"1\":{\"26\":1}}],[\"若干位\",{\"1\":{\"29\":2}}],[\"向\",{\"1\":{\"29\":2}}],[\"左移\",{\"1\":{\"29\":4}}],[\"标识\",{\"1\":{\"39\":2}}],[\"标志\",{\"1\":{\"29\":1}}],[\"标题\",{\"0\":{\"4\":1,\"5\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"16\":1,\"17\":1,\"19\":1,\"20\":1,\"45\":1,\"46\":1,\"48\":1,\"49\":1}}],[\"节省\",{\"1\":{\"29\":2}}],[\"除非\",{\"1\":{\"29\":1}}],[\"除以\",{\"1\":{\"29\":1}}],[\"除法\",{\"1\":{\"29\":1}}],[\"除了\",{\"1\":{\"6\":2,\"42\":1}}],[\"乘法\",{\"1\":{\"29\":1}}],[\"乘以\",{\"1\":{\"26\":1,\"29\":1}}],[\"相互\",{\"1\":{\"41\":1}}],[\"相等\",{\"1\":{\"32\":1}}],[\"相关\",{\"1\":{\"32\":1}}],[\"相应\",{\"1\":{\"29\":1}}],[\"相同\",{\"1\":{\"29\":1,\"32\":3}}],[\"相当于\",{\"1\":{\"29\":2}}],[\"相比之下\",{\"1\":{\"29\":1}}],[\"相信\",{\"1\":{\"6\":1}}],[\"周期\",{\"1\":{\"29\":2,\"31\":1}}],[\"周围\",{\"1\":{\"6\":1}}],[\"通用\",{\"1\":{\"39\":1}}],[\"通常\",{\"1\":{\"29\":1,\"33\":1,\"39\":2}}],[\"通过\",{\"1\":{\"23\":1,\"24\":1,\"29\":1,\"32\":2,\"33\":2,\"35\":3,\"38\":1}}],[\"硬件\",{\"1\":{\"29\":2}}],[\"专门\",{\"1\":{\"29\":1}}],[\"专业对口\",{\"1\":{\"6\":1}}],[\"专业知识\",{\"1\":{\"6\":2}}],[\"现代\",{\"1\":{\"29\":1}}],[\"现在\",{\"1\":{\"6\":1,\"42\":1}}],[\"原始\",{\"1\":{\"41\":4,\"42\":5,\"43\":4}}],[\"原\",{\"1\":{\"41\":5,\"42\":3,\"43\":1}}],[\"原因\",{\"1\":{\"29\":1,\"32\":1}}],[\"原值\",{\"1\":{\"28\":2}}],[\"图\",{\"1\":{\"29\":1,\"42\":1}}],[\"压缩\",{\"1\":{\"29\":1}}],[\"压力\",{\"1\":{\"6\":1}}],[\"适用\",{\"1\":{\"29\":2,\"35\":1,\"43\":1}}],[\"给\",{\"1\":{\"28\":2}}],[\"赋值\",{\"1\":{\"28\":2,\"29\":1,\"39\":1}}],[\"5\",{\"1\":{\"28\":2,\"33\":1}}],[\"减\",{\"1\":{\"28\":1}}],[\"它\",{\"1\":{\"28\":2,\"31\":1,\"33\":1,\"35\":1,\"38\":3,\"39\":4}}],[\"它们\",{\"1\":{\"28\":1,\"42\":2,\"43\":1}}],[\"再次\",{\"1\":{\"32\":1}}],[\"再减\",{\"1\":{\"28\":2}}],[\"再加\",{\"1\":{\"28\":2}}],[\"再\",{\"1\":{\"28\":2,\"29\":2,\"42\":1}}],[\"加载\",{\"1\":{\"32\":1,\"33\":2}}],[\"加密\",{\"1\":{\"29\":1}}],[\"加\",{\"1\":{\"28\":1,\"33\":1}}],[\"加上\",{\"1\":{\"6\":1,\"23\":2,\"38\":1}}],[\"先减\",{\"1\":{\"28\":1}}],[\"先加\",{\"1\":{\"28\":1}}],[\"先\",{\"1\":{\"28\":6,\"42\":1}}],[\"含义\",{\"1\":{\"28\":1}}],[\"顺序\",{\"1\":{\"28\":1,\"32\":1}}],[\"顺利\",{\"1\":{\"6\":1}}],[\"表现\",{\"1\":{\"35\":1}}],[\"表中\",{\"1\":{\"31\":1}}],[\"表达式\",{\"1\":{\"28\":2}}],[\"表示\",{\"1\":{\"26\":2,\"29\":1,\"33\":2}}],[\"！\",{\"1\":{\"26\":1}}],[\"构造方法\",{\"1\":{\"32\":1,\"33\":1,\"37\":1,\"38\":1}}],[\"构造\",{\"1\":{\"26\":2,\"31\":1,\"42\":2}}],[\"❗\",{\"1\":{\"26\":1}}],[\"*\",{\"1\":{\"26\":5,\"42\":4}}],[\"结合\",{\"1\":{\"32\":1}}],[\"结构\",{\"1\":{\"30\":1,\"35\":1}}],[\"结果\",{\"1\":{\"26\":1,\"41\":1,\"42\":1}}],[\"结束\",{\"1\":{\"6\":2,\"30\":3,\"31\":1}}],[\"排列\",{\"1\":{\"26\":1}}],[\"部分\",{\"1\":{\"26\":1,\"39\":2}}],[\"存放\",{\"1\":{\"38\":1}}],[\"存在\",{\"1\":{\"26\":1,\"32\":6,\"35\":3}}],[\"存储\",{\"1\":{\"25\":1,\"26\":1,\"29\":1,\"31\":1}}],[\"直到\",{\"1\":{\"26\":1}}],[\"直接\",{\"1\":{\"25\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":2,\"39\":1,\"43\":1}}],[\"转换\",{\"1\":{\"26\":1,\"29\":1}}],[\"转换成\",{\"1\":{\"26\":1}}],[\"转变\",{\"1\":{\"6\":1}}],[\"十进制\",{\"1\":{\"26\":1}}],[\"精确\",{\"1\":{\"26\":4}}],[\"精度\",{\"0\":{\"26\":1},\"1\":{\"23\":1,\"24\":1,\"26\":3}}],[\"办法\",{\"1\":{\"26\":2}}],[\"解决\",{\"1\":{\"26\":1,\"38\":1}}],[\"解释\",{\"1\":{\"26\":1}}],[\"解析\",{\"1\":{\"23\":1}}],[\"情况\",{\"1\":{\"26\":1,\"29\":1}}],[\"损失\",{\"1\":{\"26\":1}}],[\"截断\",{\"1\":{\"26\":1}}],[\"被子\",{\"1\":{\"33\":1,\"37\":1,\"39\":1}}],[\"被\",{\"1\":{\"26\":1,\"31\":1,\"32\":3,\"33\":6,\"35\":1,\"37\":2,\"38\":2,\"39\":2,\"42\":3}}],[\"循环体\",{\"1\":{\"30\":1}}],[\"循环\",{\"1\":{\"26\":2,\"30\":9}}],[\"宽度\",{\"1\":{\"26\":1}}],[\"保留\",{\"1\":{\"29\":2}}],[\"保存\",{\"1\":{\"26\":1}}],[\"保证\",{\"1\":{\"6\":1}}],[\"小于\",{\"1\":{\"32\":1}}],[\"小\",{\"1\":{\"32\":1,\"35\":1}}],[\"小数\",{\"1\":{\"26\":5}}],[\"小厂\",{\"1\":{\"6\":1}}],[\"长度\",{\"1\":{\"33\":1}}],[\"长\",{\"1\":{\"26\":1,\"33\":3}}],[\"令人\",{\"1\":{\"26\":1}}],[\"举个\",{\"1\":{\"39\":1}}],[\"举例说明\",{\"1\":{\"29\":1}}],[\"举\",{\"1\":{\"26\":1}}],[\"🌰\",{\"1\":{\"26\":1,\"29\":1,\"39\":1}}],[\"运输工具\",{\"1\":{\"39\":4}}],[\"运行\",{\"1\":{\"30\":1,\"32\":1,\"41\":1,\"42\":1}}],[\"运算符\",{\"0\":{\"27\":1,\"28\":1,\"29\":1},\"1\":{\"28\":2,\"29\":5}}],[\"运算\",{\"0\":{\"26\":1},\"1\":{\"28\":1,\"29\":1}}],[\"运动\",{\"1\":{\"6\":1}}],[\"框架\",{\"1\":{\"25\":1}}],[\"丰富\",{\"1\":{\"25\":1}}],[\"调用\",{\"1\":{\"25\":1,\"31\":1,\"32\":7,\"33\":3,\"35\":3,\"38\":1,\"42\":2,\"43\":1}}],[\"调皮\",{\"1\":{\"6\":1}}],[\"涉及\",{\"1\":{\"25\":1,\"42\":1}}],[\"稍低\",{\"1\":{\"25\":1}}],[\"泛\",{\"1\":{\"25\":1}}],[\"泛型\",{\"1\":{\"24\":2,\"25\":1}}],[\"场景\",{\"1\":{\"25\":3,\"35\":1,\"43\":1}}],[\"堆\",{\"1\":{\"25\":1,\"31\":2,\"41\":2}}],[\"栈中\",{\"1\":{\"31\":1}}],[\"栈\",{\"1\":{\"25\":2,\"31\":1}}],[\"✅\",{\"1\":{\"25\":3,\"26\":1,\"31\":1}}],[\"否\",{\"1\":{\"25\":1}}],[\"否则\",{\"1\":{\"23\":2}}],[\"操作符\",{\"1\":{\"29\":1}}],[\"操作\",{\"1\":{\"25\":2,\"28\":1,\"29\":5,\"35\":3,\"39\":1}}],[\"尽量避免\",{\"1\":{\"25\":1}}],[\"应比\",{\"1\":{\"32\":1}}],[\"应对\",{\"1\":{\"26\":1}}],[\"应该\",{\"1\":{\"25\":1}}],[\"应试\",{\"1\":{\"6\":1}}],[\"系统\",{\"1\":{\"25\":1,\"35\":2,\"39\":1}}],[\"严重\",{\"1\":{\"25\":1}}],[\"拆\",{\"1\":{\"25\":2}}],[\"拆箱\",{\"1\":{\"25\":2}}],[\"→\",{\"1\":{\"25\":2,\"28\":6}}],[\"联系\",{\"0\":{\"25\":1}}],[\"jvm\",{\"1\":{\"24\":1,\"32\":1}}],[\"java5\",{\"1\":{\"33\":1}}],[\"java\",{\"0\":{\"8\":1,\"44\":1,\"47\":1,\"55\":1},\"1\":{\"8\":1,\"23\":3,\"24\":3,\"26\":1,\"29\":1,\"31\":1,\"33\":1,\"35\":1,\"38\":5,\"39\":4}}],[\"}\",{\"1\":{\"24\":1,\"33\":22,\"37\":1,\"38\":4,\"39\":11,\"41\":10,\"42\":11}}],[\"]\",{\"1\":{\"24\":1,\"33\":3,\"41\":1,\"42\":1}}],[\"[\",{\"1\":{\"24\":1,\"33\":3,\"41\":1,\"42\":1}}],[\"&\",{\"1\":{\"24\":2}}],[\"{\",{\"1\":{\"24\":1,\"33\":22,\"37\":1,\"38\":4,\"39\":11,\"41\":10,\"42\":11}}],[\"下\",{\"1\":{\"26\":1,\"29\":1,\"30\":1}}],[\"下面\",{\"1\":{\"24\":1,\"30\":2,\"33\":1,\"42\":1}}],[\"下来\",{\"1\":{\"6\":1}}],[\"源码\",{\"1\":{\"24\":2}}],[\"🚁\",{\"1\":{\"39\":1}}],[\"🚛\",{\"1\":{\"39\":1}}],[\"🔐\",{\"1\":{\"26\":1}}],[\"🛠\",{\"1\":{\"24\":1}}],[\"📦\",{\"1\":{\"24\":1}}],[\"该类\",{\"1\":{\"31\":1}}],[\"该\",{\"1\":{\"24\":1,\"30\":1,\"32\":1,\"33\":1,\"38\":1}}],[\"地\",{\"1\":{\"35\":1,\"42\":1,\"43\":1}}],[\"地址\",{\"1\":{\"24\":1,\"41\":1,\"42\":1}}],[\"地方\",{\"1\":{\"24\":1}}],[\"值\",{\"1\":{\"24\":1,\"28\":5,\"30\":1,\"41\":1}}],[\"python\",{\"1\":{\"35\":1}}],[\"pascal\",{\"1\":{\"35\":1}}],[\"parent\",{\"1\":{\"33\":2}}],[\"parsexxx\",{\"1\":{\"25\":1}}],[\"parseint\",{\"1\":{\"24\":1}}],[\"pop\",{\"1\":{\"35\":2}}],[\"programming\",{\"1\":{\"35\":2}}],[\"procedural\",{\"1\":{\"35\":1}}],[\"protected\",{\"1\":{\"33\":1,\"39\":3,\"41\":1,\"42\":2}}],[\"printstacktrace\",{\"1\":{\"41\":1,\"42\":1}}],[\"printbasketball\",{\"1\":{\"38\":3}}],[\"println\",{\"1\":{\"24\":3,\"26\":2,\"29\":5,\"33\":4,\"38\":1,\"39\":5,\"41\":7,\"42\":7}}],[\"private\",{\"1\":{\"32\":1,\"33\":1,\"38\":2,\"39\":2}}],[\"primitive\",{\"1\":{\"25\":1}}],[\"public\",{\"1\":{\"24\":1,\"33\":24,\"38\":10,\"39\":15,\"41\":5,\"42\":5}}],[\"originalstudent\",{\"1\":{\"41\":5,\"42\":5}}],[\"oriented\",{\"1\":{\"35\":2}}],[\"override\",{\"1\":{\"39\":5,\"41\":1,\"42\":2}}],[\"overridden\",{\"1\":{\"33\":1}}],[\"off\",{\"1\":{\"39\":1}}],[\"offer\",{\"1\":{\"6\":2}}],[\"of\",{\"1\":{\"38\":1}}],[\"oop\",{\"1\":{\"35\":3}}],[\"object\",{\"1\":{\"35\":1,\"41\":1,\"42\":2}}],[\"obj\",{\"1\":{\"33\":1}}],[\"obj2\",{\"1\":{\"33\":2}}],[\"obj1\",{\"1\":{\"33\":2}}],[\"operators\",{\"1\":{\"29\":1}}],[\"out\",{\"1\":{\"24\":3,\"26\":2,\"29\":5,\"33\":4,\"38\":1,\"39\":5,\"41\":7,\"42\":7}}],[\"y\",{\"1\":{\"24\":2,\"28\":8}}],[\"x\",{\"1\":{\"24\":2,\"28\":16,\"29\":4}}],[\"🧪\",{\"1\":{\"24\":1}}],[\"资源\",{\"1\":{\"24\":1}}],[\"浪费\",{\"1\":{\"24\":1}}],[\"且\",{\"1\":{\"24\":1,\"39\":1}}],[\"极广\",{\"1\":{\"24\":1}}],[\"采用\",{\"1\":{\"24\":1}}],[\"❌\",{\"1\":{\"24\":1,\"25\":3,\"31\":1}}],[\"两种\",{\"1\":{\"30\":1,\"35\":1}}],[\"两者\",{\"0\":{\"25\":1,\"39\":1,\"43\":1},\"1\":{\"35\":1}}],[\"两个\",{\"1\":{\"24\":1,\"41\":1}}],[\"两年\",{\"1\":{\"6\":1}}],[\"/\",{\"1\":{\"24\":10,\"25\":6,\"26\":9,\"28\":8,\"29\":16,\"32\":2,\"33\":28,\"35\":3,\"37\":8,\"38\":8,\"41\":24,\"42\":16}}],[\"配置\",{\"1\":{\"24\":1}}],[\"默认\",{\"1\":{\"24\":1,\"33\":1,\"38\":5,\"39\":2}}],[\"默认值\",{\"1\":{\"23\":2,\"24\":1,\"25\":1,\"31\":1}}],[\"返回值\",{\"1\":{\"30\":2,\"32\":3}}],[\"返回\",{\"1\":{\"24\":1}}],[\"可维护性\",{\"1\":{\"38\":1}}],[\"可读性\",{\"1\":{\"38\":1}}],[\"可变\",{\"1\":{\"33\":4,\"43\":1}}],[\"可\",{\"1\":{\"24\":2,\"37\":2}}],[\"可能\",{\"1\":{\"24\":1,\"30\":1,\"39\":2}}],[\"可以\",{\"1\":{\"24\":2,\"25\":2,\"28\":1,\"29\":1,\"32\":5,\"33\":9,\"35\":6,\"38\":5,\"39\":13,\"41\":1,\"43\":1}}],[\"not\",{\"1\":{\"50\":1}}],[\"name\",{\"1\":{\"38\":5,\"41\":6,\"42\":6}}],[\"n\",{\"1\":{\"29\":4,\"41\":2,\"42\":2}}],[\"new\",{\"1\":{\"24\":2,\"26\":3,\"33\":3,\"35\":1,\"41\":2,\"42\":2}}],[\"null\",{\"1\":{\"24\":1,\"25\":4,\"31\":1}}],[\"新类\",{\"1\":{\"35\":2}}],[\"新建\",{\"1\":{\"24\":1}}],[\"新\",{\"1\":{\"24\":1,\"35\":2,\"38\":2,\"41\":3,\"42\":3}}],[\"创建对象\",{\"1\":{\"32\":1}}],[\"创建\",{\"1\":{\"24\":1,\"25\":1,\"31\":3,\"33\":2,\"38\":1,\"41\":1,\"42\":2}}],[\"频繁\",{\"1\":{\"24\":1,\"25\":1}}],[\"避免\",{\"1\":{\"24\":1}}],[\"进行\",{\"1\":{\"24\":1,\"25\":1,\"26\":1,\"28\":1,\"29\":3,\"32\":1,\"35\":1,\"42\":3}}],[\"进步\",{\"1\":{\"6\":3}}],[\"手动\",{\"1\":{\"31\":1,\"42\":3}}],[\"手段\",{\"1\":{\"24\":1}}],[\"手机\",{\"1\":{\"6\":1}}],[\"优化\",{\"1\":{\"24\":1}}],[\"机制\",{\"1\":{\"24\":5,\"26\":1}}],[\"机会\",{\"1\":{\"6\":1}}],[\"缓存\",{\"1\":{\"24\":15}}],[\"getname\",{\"1\":{\"38\":3}}],[\"get\",{\"1\":{\"24\":1}}],[\"反\",{\"1\":{\"42\":1}}],[\"反编译\",{\"1\":{\"38\":1}}],[\"反而\",{\"1\":{\"24\":1}}],[\"反射\",{\"1\":{\"24\":1}}],[\"反问\",{\"1\":{\"6\":1}}],[\"需要\",{\"1\":{\"24\":1,\"29\":1,\"30\":2,\"32\":3,\"33\":1,\"37\":1,\"38\":2,\"39\":1,\"42\":2,\"43\":3}}],[\"处理器\",{\"1\":{\"29\":1}}],[\"处理\",{\"1\":{\"24\":2,\"29\":1,\"32\":2}}],[\")\",{\"1\":{\"24\":13,\"26\":7,\"28\":2,\"29\":6,\"33\":20,\"35\":1,\"38\":10,\"39\":14,\"41\":26,\"42\":35,\"43\":1}}],[\"(\",{\"1\":{\"24\":13,\"26\":7,\"28\":2,\"29\":6,\"33\":20,\"35\":1,\"38\":10,\"39\":14,\"41\":26,\"42\":35,\"43\":1}}],[\"如何\",{\"1\":{\"26\":1,\"39\":2}}],[\"如果\",{\"1\":{\"25\":1,\"32\":1,\"33\":1,\"35\":2,\"37\":1,\"38\":2}}],[\"如\",{\"1\":{\"24\":3,\"25\":2,\"29\":1,\"43\":1}}],[\"如下\",{\"1\":{\"23\":1,\"24\":1,\"32\":1,\"35\":1,\"38\":2}}],[\"方式\",{\"1\":{\"32\":7,\"35\":2,\"42\":4}}],[\"方法\",{\"0\":{\"32\":1},\"1\":{\"24\":3,\"25\":4,\"30\":5,\"31\":4,\"32\":21,\"33\":15,\"35\":16,\"37\":6,\"38\":26,\"39\":12,\"42\":4}}],[\"方向\",{\"1\":{\"6\":4}}],[\"提高\",{\"1\":{\"38\":3}}],[\"提前\",{\"1\":{\"30\":1}}],[\"提供\",{\"1\":{\"24\":1,\"35\":1,\"37\":1,\"38\":3,\"39\":2}}],[\"提升\",{\"1\":{\"6\":2}}],[\"用来\",{\"1\":{\"37\":1,\"38\":1}}],[\"用法\",{\"1\":{\"30\":1}}],[\"用到\",{\"1\":{\"30\":1}}],[\"用于\",{\"1\":{\"25\":4,\"28\":1,\"29\":1,\"30\":3,\"33\":9,\"39\":2}}],[\"用\",{\"1\":{\"24\":1,\"26\":3,\"33\":1,\"35\":2,\"38\":1,\"39\":2}}],[\"用途\",{\"1\":{\"24\":1}}],[\"支持\",{\"1\":{\"24\":2,\"25\":4,\"29\":1,\"33\":1,\"39\":1}}],[\"必须\",{\"1\":{\"24\":1,\"31\":1,\"32\":2,\"33\":1,\"35\":1,\"37\":1,\"38\":3,\"39\":2}}],[\">\",{\"1\":{\"24\":3,\"26\":5,\"29\":19}}],[\"<\",{\"1\":{\"24\":3,\"29\":6,\"41\":1,\"42\":2}}],[\"集合\",{\"0\":{\"44\":1,\"47\":1},\"1\":{\"24\":1,\"25\":3}}],[\"作用\",{\"1\":{\"24\":1,\"37\":1}}],[\"作为\",{\"1\":{\"23\":1,\"33\":1,\"35\":1,\"38\":1}}],[\"包含\",{\"1\":{\"38\":1,\"39\":3,\"43\":3}}],[\"包括\",{\"1\":{\"35\":1,\"39\":1}}],[\"包中\",{\"1\":{\"33\":3}}],[\"包\",{\"1\":{\"24\":1}}],[\"包装\",{\"0\":{\"24\":1},\"1\":{\"24\":12,\"25\":2,\"41\":3,\"43\":1}}],[\".\",{\"1\":{\"24\":18,\"26\":11,\"29\":10,\"32\":4,\"33\":33,\"38\":4,\"39\":14,\"41\":33,\"42\":38,\"43\":1}}],[\"类能\",{\"1\":{\"39\":1}}],[\"类来\",{\"1\":{\"38\":1}}],[\"类名\",{\"1\":{\"32\":3,\"33\":1,\"37\":1}}],[\"类中\",{\"1\":{\"24\":1,\"31\":1,\"32\":2,\"35\":1}}],[\"类\",{\"1\":{\"24\":4,\"25\":1,\"31\":1,\"32\":8,\"33\":23,\"35\":4,\"37\":2,\"38\":3,\"39\":4,\"42\":2}}],[\"类型\",{\"0\":{\"24\":1},\"1\":{\"23\":5,\"24\":11,\"25\":5,\"29\":5,\"32\":3,\"35\":3,\"39\":3,\"41\":9,\"42\":5,\"43\":5}}],[\"\\\"\",{\"1\":{\"23\":2,\"24\":2,\"26\":6,\"33\":6,\"38\":4,\"39\":14,\"41\":28,\"42\":28}}],[\":\",{\"1\":{\"23\":2,\"29\":3,\"41\":35,\"42\":35}}],[\"height\",{\"1\":{\"41\":7,\"42\":6}}],[\"hello\",{\"1\":{\"23\":1}}],[\"how\",{\"1\":{\"39\":1}}],[\"hashcode\",{\"1\":{\"41\":1,\"42\":1}}],[\"has\",{\"1\":{\"39\":1}}],[\"high\",{\"1\":{\"24\":1}}],[\"h\",{\"1\":{\"23\":1}}],[\"无人机\",{\"1\":{\"39\":3}}],[\"无需\",{\"1\":{\"32\":1}}],[\"无\",{\"1\":{\"29\":1,\"37\":1}}],[\"无限\",{\"1\":{\"26\":1}}],[\"无法访问\",{\"1\":{\"35\":1}}],[\"无法\",{\"1\":{\"23\":1,\"32\":1,\"33\":3}}],[\"无论是\",{\"1\":{\"6\":1}}],[\"或者\",{\"1\":{\"30\":1,\"32\":1,\"33\":1,\"38\":1,\"39\":2}}],[\"或\",{\"1\":{\"23\":1,\"28\":2,\"29\":2,\"32\":1,\"33\":3,\"35\":1,\"37\":1,\"38\":1,\"39\":2,\"42\":1,\"43\":1}}],[\"或许\",{\"1\":{\"6\":2}}],[\"注意\",{\"1\":{\"23\":1,\"25\":1,\"26\":1,\"29\":1,\"32\":1,\"35\":2,\"41\":1,\"42\":1}}],[\"️\",{\"1\":{\"23\":1,\"24\":1,\"25\":1,\"29\":1,\"35\":2}}],[\"⚠\",{\"1\":{\"23\":1,\"25\":1,\"29\":1,\"35\":2}}],[\"双引号\",{\"1\":{\"23\":1}}],[\"双\",{\"1\":{\"23\":1}}],[\"database\",{\"0\":{\"52\":1}}],[\"display\",{\"1\":{\"41\":5,\"42\":5}}],[\"drone\",{\"1\":{\"39\":4}}],[\"drivername\",{\"1\":{\"39\":2}}],[\"driver\",{\"1\":{\"39\":2}}],[\"deep\",{\"1\":{\"43\":1}}],[\"deepcopydemo\",{\"1\":{\"42\":1}}],[\"destination\",{\"1\":{\"39\":5}}],[\"delivering\",{\"1\":{\"39\":1}}],[\"deliver\",{\"1\":{\"39\":3}}],[\"declaration\",{\"1\":{\"38\":1}}],[\"default\",{\"1\":{\"33\":1,\"38\":7,\"39\":1}}],[\"dog\",{\"1\":{\"35\":2}}],[\"double\",{\"1\":{\"23\":3,\"24\":5,\"26\":1,\"39\":3}}],[\"djava\",{\"1\":{\"24\":1}}],[\"d\",{\"1\":{\"23\":2,\"28\":3}}],[\"位为\",{\"1\":{\"29\":2}}],[\"位向\",{\"1\":{\"29\":1}}],[\"位置\",{\"1\":{\"25\":1,\"28\":1,\"31\":2}}],[\"位于\",{\"1\":{\"24\":1,\"31\":2}}],[\"位\",{\"1\":{\"23\":2,\"29\":8}}],[\"位数\",{\"1\":{\"23\":1,\"29\":3}}],[\"7\",{\"1\":{\"23\":1,\"28\":1,\"33\":1}}],[\"尾数\",{\"1\":{\"23\":2}}],[\"尾声\",{\"1\":{\"6\":1}}],[\"单独\",{\"1\":{\"38\":1}}],[\"单引号\",{\"1\":{\"23\":1}}],[\"单精度\",{\"1\":{\"23\":1}}],[\"单身\",{\"1\":{\"6\":1}}],[\"every\",{\"1\":{\"38\":1}}],[\"extends\",{\"1\":{\"33\":2,\"39\":2}}],[\"executed\",{\"1\":{\"33\":1}}],[\"else\",{\"1\":{\"24\":1}}],[\"equals\",{\"1\":{\"24\":2,\"26\":1,\"38\":1}}],[\"e308\",{\"1\":{\"23\":1}}],[\"e38\",{\"1\":{\"23\":1}}],[\"e\",{\"1\":{\"23\":2,\"41\":2,\"42\":2}}],[\"found\",{\"1\":{\"50\":1}}],[\"flying\",{\"1\":{\"39\":1}}],[\"fly\",{\"1\":{\"39\":2}}],[\"flyable\",{\"1\":{\"39\":4}}],[\"float\",{\"1\":{\"23\":4,\"24\":4}}],[\"field\",{\"1\":{\"38\":1}}],[\"finalmethod\",{\"1\":{\"33\":2}}],[\"finalvar\",{\"1\":{\"33\":2}}],[\"final\",{\"1\":{\"32\":1,\"33\":14,\"38\":4,\"39\":1}}],[\"false\",{\"1\":{\"23\":2,\"24\":2}}],[\"f\",{\"1\":{\"23\":5}}],[\"age\",{\"1\":{\"41\":7,\"42\":6}}],[\"assigndriver\",{\"1\":{\"39\":1}}],[\"and\",{\"1\":{\"38\":1}}],[\"an\",{\"1\":{\"38\":1}}],[\"animal\",{\"1\":{\"35\":3}}],[\"arg1\",{\"1\":{\"33\":1}}],[\"args\",{\"1\":{\"33\":5,\"41\":1,\"42\":1}}],[\"abstract\",{\"1\":{\"33\":2,\"37\":2,\"38\":2,\"39\":3}}],[\"add\",{\"1\":{\"26\":1}}],[\"a\",{\"1\":{\"23\":3,\"24\":5,\"25\":2,\"26\":2,\"28\":3,\"29\":4,\"33\":1,\"37\":3,\"39\":2}}],[\"collection\",{\"0\":{\"56\":1}}],[\"copy\",{\"1\":{\"43\":2}}],[\"continue\",{\"0\":{\"30\":1},\"1\":{\"30\":1}}],[\"clonedstudent\",{\"1\":{\"41\":8,\"42\":12}}],[\"clonenotsupportedexception\",{\"1\":{\"41\":2,\"42\":3}}],[\"clone\",{\"1\":{\"41\":3,\"42\":10,\"43\":1}}],[\"cloneable\",{\"1\":{\"41\":1,\"42\":3}}],[\"class\",{\"1\":{\"33\":12,\"37\":2,\"39\":3,\"41\":3,\"42\":3}}],[\"c#\",{\"1\":{\"35\":1}}],[\"c++\",{\"1\":{\"35\":1}}],[\"child\",{\"1\":{\"33\":1}}],[\"changefinalvar\",{\"1\":{\"33\":1}}],[\"character\",{\"1\":{\"24\":2}}],[\"char\",{\"1\":{\"23\":5,\"24\":1,\"29\":1}}],[\"catch\",{\"1\":{\"41\":1,\"42\":1}}],[\"cannot\",{\"1\":{\"33\":1}}],[\"cache\",{\"1\":{\"24\":1}}],[\"c\",{\"1\":{\"23\":1,\"25\":1,\"26\":2,\"28\":3,\"35\":1}}],[\"u0000\",{\"1\":{\"23\":1}}],[\"\\\\\",{\"1\":{\"23\":1,\"41\":2,\"42\":2}}],[\"'\",{\"1\":{\"23\":6}}],[\"loaded\",{\"1\":{\"39\":2}}],[\"loadcargo\",{\"1\":{\"39\":3}}],[\"loadable\",{\"1\":{\"39\":5}}],[\"long\",{\"1\":{\"23\":4,\"24\":3,\"29\":5}}],[\"list\",{\"1\":{\"24\":2}}],[\"lang\",{\"1\":{\"24\":2}}],[\"l\",{\"1\":{\"23\":4}}],[\"id\",{\"1\":{\"39\":1}}],[\"implements\",{\"1\":{\"39\":2,\"41\":1,\"42\":2}}],[\"implementation\",{\"1\":{\"33\":1}}],[\"implicitly\",{\"1\":{\"38\":1}}],[\"import\",{\"1\":{\"26\":1}}],[\"istrue\",{\"1\":{\"38\":3}}],[\"is\",{\"1\":{\"33\":1,\"38\":1,\"39\":1}}],[\"isnan\",{\"1\":{\"24\":1}}],[\"in\",{\"1\":{\"38\":1}}],[\"incrementstaticvar\",{\"1\":{\"33\":3}}],[\"interface\",{\"1\":{\"38\":4,\"39\":2}}],[\"integercache\",{\"1\":{\"24\":2}}],[\"integer\",{\"1\":{\"24\":19,\"25\":3,\"41\":2,\"42\":2}}],[\"int\",{\"1\":{\"23\":3,\"24\":3,\"25\":5,\"28\":6,\"29\":8,\"33\":2,\"41\":2,\"42\":2}}],[\"if\",{\"1\":{\"24\":1}}],[\"i\",{\"1\":{\"23\":1,\"24\":5}}],[\"serializable\",{\"1\":{\"42\":1}}],[\"super\",{\"1\":{\"41\":1,\"42\":3,\"43\":1}}],[\"subjectdeep\",{\"1\":{\"42\":12}}],[\"subjectname\",{\"1\":{\"41\":2,\"42\":2}}],[\"subject\",{\"1\":{\"41\":17,\"42\":11}}],[\"subclass\",{\"1\":{\"33\":1}}],[\"synchronized\",{\"1\":{\"33\":2}}],[\"system\",{\"1\":{\"24\":3,\"26\":2,\"29\":5,\"33\":4,\"38\":1,\"39\":5,\"41\":7,\"42\":7}}],[\"shallow\",{\"1\":{\"43\":1}}],[\"shallowcopydemo\",{\"1\":{\"41\":1}}],[\"shawn\",{\"1\":{\"38\":1}}],[\"shift\",{\"1\":{\"29\":1}}],[\"short\",{\"1\":{\"23\":3,\"24\":3,\"29\":2}}],[\"studentdeep\",{\"1\":{\"42\":8}}],[\"studentname\",{\"1\":{\"41\":7,\"42\":6}}],[\"student\",{\"1\":{\"41\":6}}],[\"staticmethod\",{\"1\":{\"33\":2}}],[\"staticvar\",{\"1\":{\"33\":3}}],[\"static\",{\"1\":{\"24\":1,\"31\":1,\"32\":2,\"33\":14,\"38\":9,\"39\":2,\"41\":1,\"42\":1}}],[\"string\",{\"1\":{\"23\":1,\"33\":6,\"38\":6,\"39\":6,\"41\":7,\"42\":6,\"43\":1}}],[\"s\",{\"1\":{\"23\":1}}],[\"^\",{\"1\":{\"23\":5}}],[\";\",{\"1\":{\"23\":7,\"24\":11,\"25\":3,\"26\":6,\"28\":6,\"29\":7,\"30\":2,\"33\":14,\"35\":1,\"38\":8,\"39\":11,\"41\":29,\"42\":32}}],[\"=\",{\"1\":{\"23\":10,\"24\":15,\"25\":3,\"26\":8,\"28\":14,\"29\":2,\"33\":6,\"35\":3,\"38\":1,\"39\":1,\"41\":11,\"42\":13}}],[\"~\",{\"1\":{\"23\":8,\"24\":6}}],[\"-\",{\"1\":{\"23\":11,\"24\":8,\"26\":5,\"28\":11,\"29\":2,\"35\":2,\"39\":2,\"41\":2,\"42\":4}}],[\"01111100\",{\"1\":{\"29\":1}}],[\"0100\",{\"1\":{\"29\":1}}],[\"0001\",{\"1\":{\"29\":1}}],[\"0000\",{\"1\":{\"29\":3}}],[\"0.6\",{\"1\":{\"26\":1}}],[\"0.8\",{\"1\":{\"26\":2}}],[\"0.4\",{\"1\":{\"26\":3}}],[\"0.3\",{\"1\":{\"26\":2}}],[\"0.30000000000000004\",{\"1\":{\"26\":1}}],[\"0.2\",{\"1\":{\"26\":6}}],[\"0.1\",{\"1\":{\"26\":2}}],[\"0.0\",{\"1\":{\"23\":2}}],[\"0\",{\"1\":{\"23\":5,\"24\":1,\"25\":1,\"26\":3,\"29\":4,\"31\":1,\"33\":2}}],[\"示例\",{\"1\":{\"23\":1,\"24\":1,\"28\":1}}],[\"取值\",{\"1\":{\"23\":1,\"24\":1}}],[\"字节\",{\"1\":{\"23\":1,\"38\":1,\"42\":2}}],[\"字符串\",{\"1\":{\"26\":1}}],[\"字符\",{\"1\":{\"23\":1}}],[\"空间\",{\"1\":{\"23\":1}}],[\"空闲\",{\"1\":{\"6\":1}}],[\"占有\",{\"1\":{\"29\":1}}],[\"占\",{\"1\":{\"23\":1}}],[\"basis\",{\"0\":{\"54\":1}}],[\"basketballplayer\",{\"1\":{\"38\":2}}],[\"body\",{\"1\":{\"38\":1}}],[\"boolean\",{\"1\":{\"23\":3,\"24\":3,\"38\":2}}],[\"be\",{\"1\":{\"33\":1}}],[\"block\",{\"1\":{\"33\":1}}],[\"break\",{\"0\":{\"30\":1},\"1\":{\"30\":1}}],[\"bigdecimal\",{\"1\":{\"26\":9}}],[\"b\",{\"1\":{\"23\":2,\"24\":3,\"25\":2,\"26\":2,\"28\":3,\"29\":3,\"37\":3}}],[\"byte\",{\"1\":{\"23\":3,\"24\":3,\"29\":2}}],[\"布尔值\",{\"1\":{\"29\":1}}],[\"布尔\",{\"1\":{\"23\":1}}],[\"型\",{\"1\":{\"23\":2,\"25\":1,\"31\":2}}],[\"浮点数\",{\"0\":{\"26\":1},\"1\":{\"26\":2}}],[\"浮点\",{\"1\":{\"23\":1,\"24\":1,\"26\":1}}],[\"整数\",{\"1\":{\"26\":1,\"29\":2}}],[\"整数型\",{\"1\":{\"23\":1}}],[\"整型\",{\"1\":{\"23\":1}}],[\"整个\",{\"1\":{\"1\":1,\"7\":1,\"30\":1}}],[\"404\",{\"1\":{\"50\":1}}],[\"4.9\",{\"1\":{\"23\":1}}],[\"45\",{\"1\":{\"23\":1}}],[\"4\",{\"1\":{\"23\":3,\"28\":4,\"29\":3,\"33\":1}}],[\"65535\",{\"1\":{\"23\":1}}],[\"63\",{\"1\":{\"23\":2}}],[\"64\",{\"1\":{\"23\":2,\"29\":1}}],[\"6\",{\"1\":{\"23\":1,\"28\":4,\"33\":1}}],[\"：\",{\"1\":{\"23\":8,\"24\":7,\"25\":2,\"26\":5,\"28\":1,\"29\":9,\"30\":6,\"31\":1,\"32\":1,\"33\":16,\"35\":6,\"38\":6,\"39\":9,\"41\":3,\"42\":8}}],[\"为止\",{\"1\":{\"26\":1}}],[\"为\",{\"1\":{\"23\":1,\"24\":1,\"25\":2,\"26\":2,\"29\":1,\"31\":2,\"32\":1,\"35\":3,\"37\":1}}],[\"为什么\",{\"1\":{\"6\":2,\"26\":1,\"32\":1,\"38\":1}}],[\"种\",{\"1\":{\"23\":7}}],[\"8\",{\"1\":{\"23\":5,\"29\":2,\"33\":1,\"38\":3,\"39\":2}}],[\"1735600054\",{\"1\":{\"42\":2}}],[\"175\",{\"1\":{\"41\":4,\"42\":4}}],[\"180\",{\"1\":{\"41\":2,\"42\":2}}],[\"18\",{\"1\":{\"41\":4,\"42\":4}}],[\"11111100\",{\"1\":{\"29\":1}}],[\"1111\",{\"1\":{\"29\":1}}],[\"1.\",{\"1\":{\"43\":2}}],[\"1.2\",{\"1\":{\"26\":1}}],[\"1.6\",{\"1\":{\"26\":1}}],[\"1.7976931348623157\",{\"1\":{\"23\":1}}],[\"1.4\",{\"1\":{\"23\":1}}],[\"15\",{\"1\":{\"23\":3}}],[\"16\",{\"1\":{\"23\":4,\"29\":1}}],[\"100\",{\"1\":{\"23\":1,\"24\":4}}],[\"10000\",{\"1\":{\"23\":1}}],[\"1000\",{\"1\":{\"23\":1,\"24\":2,\"29\":2}}],[\"10\",{\"1\":{\"23\":1,\"25\":1,\"33\":1}}],[\"123\",{\"1\":{\"24\":1}}],[\"127\",{\"1\":{\"23\":1,\"24\":7}}],[\"128\",{\"1\":{\"23\":1,\"24\":10}}],[\"1\",{\"0\":{\"21\":1,\"44\":1},\"1\":{\"23\":7,\"26\":2,\"28\":10,\"29\":9,\"32\":1,\"33\":1}}],[\"数组\",{\"1\":{\"41\":1}}],[\"数\",{\"1\":{\"26\":1}}],[\"数值\",{\"1\":{\"23\":2,\"24\":2,\"25\":1,\"29\":2,\"31\":1}}],[\"数字\",{\"1\":{\"23\":1,\"26\":1}}],[\"数据\",{\"1\":{\"23\":2,\"32\":2,\"35\":7,\"42\":1}}],[\"数据类型\",{\"0\":{\"18\":1,\"22\":1,\"23\":1},\"1\":{\"23\":2,\"41\":4,\"43\":1}}],[\"数据结构\",{\"0\":{\"15\":1}}],[\"数学\",{\"1\":{\"6\":1,\"41\":3,\"42\":4}}],[\"索引\",{\"0\":{\"12\":1}}],[\"计算\",{\"1\":{\"25\":1,\"26\":2,\"29\":1}}],[\"计算机\",{\"1\":{\"6\":1,\"26\":4}}],[\"计划\",{\"0\":{\"9\":1}}],[\"执行\",{\"0\":{\"9\":1},\"1\":{\"29\":1,\"30\":1,\"32\":1,\"33\":2,\"35\":2,\"39\":1,\"41\":1}}],[\"执着\",{\"1\":{\"6\":1}}],[\"基类\",{\"1\":{\"39\":1}}],[\"基础知识\",{\"0\":{\"21\":1,\"34\":1}}],[\"基础\",{\"1\":{\"8\":1,\"35\":1}}],[\"基本\",{\"0\":{\"23\":1},\"1\":{\"6\":2,\"23\":3,\"24\":4,\"25\":3,\"41\":3,\"43\":1}}],[\"天天开心\",{\"1\":{\"6\":1}}],[\"屏幕\",{\"1\":{\"6\":1}}],[\"祝愿\",{\"1\":{\"6\":1}}],[\"勇气\",{\"1\":{\"6\":1}}],[\"带有\",{\"1\":{\"38\":1}}],[\"带符号\",{\"1\":{\"29\":1}}],[\"带\",{\"1\":{\"6\":1}}],[\"坚定\",{\"1\":{\"6\":1}}],[\"让\",{\"1\":{\"6\":1}}],[\"遇见\",{\"1\":{\"6\":1}}],[\"挑战\",{\"1\":{\"6\":1}}],[\"充满\",{\"1\":{\"6\":1}}],[\"踏入\",{\"1\":{\"6\":1}}],[\"懵懂\",{\"1\":{\"6\":1}}],[\"片段\",{\"1\":{\"6\":1}}],[\"温柔\",{\"1\":{\"6\":1}}],[\"记忆\",{\"1\":{\"6\":1}}],[\"成为\",{\"1\":{\"38\":1}}],[\"成员\",{\"1\":{\"31\":5,\"32\":10,\"33\":3,\"37\":1,\"39\":3,\"41\":7,\"42\":5,\"43\":5}}],[\"成长\",{\"1\":{\"6\":1}}],[\"成\",{\"1\":{\"6\":1}}],[\"汗水\",{\"1\":{\"6\":1}}],[\"阳光\",{\"1\":{\"6\":1}}],[\"窗前\",{\"1\":{\"6\":1}}],[\"日子\",{\"1\":{\"6\":1}}],[\"八种\",{\"1\":{\"24\":1}}],[\"八\",{\"1\":{\"6\":1}}],[\"八股\",{\"1\":{\"6\":1}}],[\"赶早\",{\"1\":{\"6\":1}}],[\"告别\",{\"1\":{\"6\":1}}],[\"彻底\",{\"1\":{\"6\":1}}],[\"啦\",{\"1\":{\"6\":1}}],[\"烟消云散\",{\"1\":{\"6\":1}}],[\"行为\",{\"1\":{\"35\":1,\"37\":1,\"39\":3}}],[\"行动\",{\"1\":{\"6\":1}}],[\"行业\",{\"1\":{\"6\":2}}],[\"清晰\",{\"1\":{\"6\":1,\"35\":1}}],[\"清楚\",{\"1\":{\"6\":1}}],[\"心中\",{\"1\":{\"6\":2}}],[\"社交\",{\"1\":{\"6\":1}}],[\"社会\",{\"1\":{\"6\":2}}],[\"着\",{\"1\":{\"6\":2}}],[\"伴随\",{\"1\":{\"6\":1}}],[\"最后\",{\"1\":{\"33\":1}}],[\"最\",{\"1\":{\"6\":2}}],[\"期\",{\"1\":{\"32\":1}}],[\"期望\",{\"1\":{\"26\":1}}],[\"期间\",{\"1\":{\"6\":1,\"35\":1}}],[\"期末\",{\"1\":{\"6\":2}}],[\"迷茫\",{\"1\":{\"6\":3}}],[\"之间\",{\"1\":{\"32\":1,\"35\":1}}],[\"之后\",{\"1\":{\"30\":1,\"32\":1}}],[\"之前\",{\"1\":{\"6\":1,\"38\":1,\"39\":1}}],[\"之外\",{\"1\":{\"6\":2}}],[\"偶尔\",{\"1\":{\"6\":1}}],[\"世界观\",{\"1\":{\"6\":1}}],[\"价值观\",{\"1\":{\"6\":1}}],[\"五湖四海\",{\"1\":{\"6\":1}}],[\"五一\",{\"1\":{\"6\":1}}],[\"来\",{\"1\":{\"29\":3,\"32\":2,\"35\":1,\"38\":2}}],[\"来自\",{\"1\":{\"6\":1}}],[\"来说\",{\"1\":{\"6\":4}}],[\"接口定义\",{\"1\":{\"37\":1,\"39\":1}}],[\"接口\",{\"0\":{\"36\":1,\"38\":1},\"1\":{\"35\":3,\"38\":21,\"39\":9,\"42\":2}}],[\"接受\",{\"1\":{\"33\":1,\"43\":1}}],[\"接触\",{\"1\":{\"6\":2}}],[\"接近\",{\"1\":{\"6\":1}}],[\"而且\",{\"1\":{\"26\":1}}],[\"而\",{\"1\":{\"6\":1,\"24\":2,\"31\":2,\"32\":3,\"33\":2,\"38\":2,\"39\":1,\"41\":2}}],[\"而是\",{\"1\":{\"6\":2,\"32\":1}}],[\"；\",{\"1\":{\"6\":1,\"23\":1,\"24\":1,\"33\":2,\"35\":3,\"39\":1,\"41\":1}}],[\"考上\",{\"1\":{\"6\":1}}],[\"考点\",{\"1\":{\"6\":1}}],[\"讨厌\",{\"1\":{\"6\":1}}],[\"贪玩\",{\"1\":{\"6\":1}}],[\"初始值\",{\"1\":{\"39\":1}}],[\"初始化\",{\"1\":{\"31\":1,\"33\":2}}],[\"初步\",{\"1\":{\"6\":1}}],[\"初高中\",{\"1\":{\"6\":1}}],[\"初中\",{\"1\":{\"6\":1}}],[\"追随\",{\"1\":{\"6\":1}}],[\"答案\",{\"1\":{\"6\":5}}],[\"阶段\",{\"1\":{\"6\":1}}],[\"每\",{\"1\":{\"6\":1}}],[\"每个\",{\"1\":{\"6\":1}}],[\"每天\",{\"1\":{\"6\":4}}],[\"问题\",{\"1\":{\"6\":5,\"26\":2,\"38\":2}}],[\"三大\",{\"1\":{\"35\":1}}],[\"三种\",{\"1\":{\"29\":1}}],[\"三个\",{\"1\":{\"6\":5}}],[\"三点一线\",{\"1\":{\"6\":1}}],[\"知道\",{\"1\":{\"6\":1,\"26\":1}}],[\"知识库\",{\"0\":{\"7\":1},\"1\":{\"7\":1}}],[\"知识\",{\"1\":{\"6\":3,\"32\":1}}],[\"更\",{\"1\":{\"26\":1,\"29\":1,\"32\":1}}],[\"更高\",{\"1\":{\"25\":1}}],[\"更加\",{\"1\":{\"6\":1,\"38\":1}}],[\"更为重要\",{\"1\":{\"6\":1}}],[\"更是\",{\"1\":{\"6\":1}}],[\"真正\",{\"1\":{\"6\":2,\"35\":1}}],[\"真真切切\",{\"1\":{\"6\":1}}],[\"人和事\",{\"1\":{\"6\":1}}],[\"人生观\",{\"1\":{\"6\":1}}],[\"人生\",{\"1\":{\"6\":1}}],[\"人\",{\"1\":{\"6\":2}}],[\"个数\",{\"1\":{\"32\":1}}],[\"个\",{\"1\":{\"6\":2,\"26\":1,\"33\":1}}],[\"个人\",{\"1\":{\"0\":1}}],[\"明白\",{\"1\":{\"6\":1}}],[\"弄\",{\"1\":{\"6\":1}}],[\"探索\",{\"1\":{\"6\":2}}],[\"认为\",{\"1\":{\"6\":3}}],[\"认识\",{\"1\":{\"6\":3}}],[\"想要\",{\"1\":{\"6\":2}}],[\"想\",{\"1\":{\"6\":1}}],[\"想着\",{\"1\":{\"6\":1}}],[\"校招\",{\"1\":{\"6\":1}}],[\"校园生活\",{\"1\":{\"6\":1}}],[\"校园\",{\"1\":{\"6\":2}}],[\"参来\",{\"1\":{\"32\":1}}],[\"参数\",{\"1\":{\"24\":1,\"32\":2,\"33\":8}}],[\"参加\",{\"1\":{\"6\":1}}],[\"参与\",{\"1\":{\"6\":1}}],[\"导致\",{\"1\":{\"6\":1,\"26\":1,\"28\":1,\"38\":1,\"41\":1}}],[\"太晚\",{\"1\":{\"6\":1}}],[\"点\",{\"1\":{\"6\":1}}],[\"确保\",{\"1\":{\"33\":1,\"42\":1,\"43\":1}}],[\"确定\",{\"1\":{\"6\":1,\"35\":1}}],[\"确实\",{\"1\":{\"6\":1}}],[\"壁垒\",{\"1\":{\"6\":1}}],[\"信息\",{\"1\":{\"6\":2,\"35\":1,\"41\":8,\"42\":8}}],[\"打破\",{\"1\":{\"6\":1}}],[\"早期\",{\"1\":{\"35\":1}}],[\"早点\",{\"1\":{\"6\":1}}],[\"早\",{\"1\":{\"6\":1}}],[\"网上\",{\"1\":{\"6\":1}}],[\"网课\",{\"1\":{\"6\":1}}],[\"虽然\",{\"1\":{\"6\":1}}],[\"算法\",{\"1\":{\"35\":1}}],[\"算术\",{\"1\":{\"29\":1}}],[\"算\",{\"1\":{\"6\":1}}],[\"收获\",{\"1\":{\"6\":1}}],[\"收到\",{\"1\":{\"6\":1}}],[\"各\",{\"1\":{\"6\":1}}],[\"困难\",{\"1\":{\"6\":1}}],[\"毕业\",{\"1\":{\"6\":1}}],[\"毕业设计\",{\"1\":{\"6\":2}}],[\"面向\",{\"1\":{\"35\":2}}],[\"面向对象编程\",{\"1\":{\"35\":1}}],[\"面向对象\",{\"0\":{\"35\":1},\"1\":{\"35\":1}}],[\"面临\",{\"1\":{\"6\":1}}],[\"面试\",{\"1\":{\"6\":2}}],[\"甚至\",{\"1\":{\"6\":2}}],[\"经验\",{\"1\":{\"6\":1}}],[\"经历\",{\"1\":{\"6\":1}}],[\"积累\",{\"1\":{\"6\":2}}],[\"积极\",{\"1\":{\"6\":1}}],[\"出现\",{\"1\":{\"26\":1,\"38\":1}}],[\"出去\",{\"1\":{\"6\":1}}],[\"出来\",{\"1\":{\"6\":1}}],[\"意味着\",{\"1\":{\"38\":1,\"41\":1,\"42\":1}}],[\"意识\",{\"1\":{\"6\":1}}],[\"意义\",{\"1\":{\"6\":2,\"24\":1,\"38\":1}}],[\"培养\",{\"1\":{\"6\":1}}],[\"当前\",{\"1\":{\"30\":1}}],[\"当\",{\"1\":{\"6\":1,\"24\":1,\"29\":1,\"30\":2,\"32\":1,\"37\":1,\"38\":1}}],[\"当然\",{\"1\":{\"6\":1}}],[\"当初\",{\"1\":{\"6\":2}}],[\"当时\",{\"1\":{\"6\":3}}],[\"懊悔\",{\"1\":{\"6\":2}}],[\"厂上\",{\"1\":{\"6\":1}}],[\"目光\",{\"1\":{\"6\":1}}],[\"目录\",{\"1\":{\"1\":1,\"7\":1}}],[\"于\",{\"1\":{\"6\":1,\"29\":2,\"41\":1}}],[\"签\",{\"1\":{\"6\":1}}],[\"上例\",{\"1\":{\"38\":3}}],[\"上限\",{\"1\":{\"24\":1}}],[\"上\",{\"1\":{\"6\":2,\"25\":1,\"29\":1,\"38\":1,\"41\":1}}],[\"上面\",{\"1\":{\"6\":2}}],[\"能飞\",{\"1\":{\"39\":1}}],[\"能够\",{\"1\":{\"32\":2}}],[\"能\",{\"1\":{\"6\":1,\"38\":1,\"39\":2}}],[\"能力\",{\"1\":{\"6\":2,\"39\":2}}],[\"已\",{\"1\":{\"24\":1,\"35\":1}}],[\"已有\",{\"1\":{\"6\":1}}],[\"已经\",{\"1\":{\"6\":1,\"32\":1}}],[\"像\",{\"1\":{\"6\":1}}],[\"状态\",{\"1\":{\"6\":1,\"35\":1}}],[\"麻木\",{\"1\":{\"6\":1}}],[\"陷入\",{\"1\":{\"6\":2}}],[\"随\",{\"1\":{\"31\":3}}],[\"随着\",{\"1\":{\"6\":1}}],[\"随笔\",{\"0\":{\"1\":1,\"2\":1,\"3\":1},\"1\":{\"1\":1}}],[\"做出\",{\"1\":{\"32\":2}}],[\"做\",{\"1\":{\"6\":1,\"39\":3}}],[\"春招\",{\"1\":{\"6\":2}}],[\"秋招\",{\"1\":{\"6\":3}}],[\"+\",{\"1\":{\"6\":3,\"24\":1,\"26\":1,\"28\":11,\"33\":2,\"35\":2,\"39\":7,\"41\":8,\"42\":8}}],[\"任务\",{\"1\":{\"6\":1}}],[\"任何\",{\"1\":{\"6\":1,\"25\":1,\"33\":4,\"39\":1,\"42\":1,\"43\":1}}],[\"主要\",{\"1\":{\"6\":1,\"24\":1,\"29\":1,\"32\":1,\"37\":1}}],[\"家里\",{\"1\":{\"6\":1}}],[\"所示\",{\"1\":{\"38\":2}}],[\"所在\",{\"1\":{\"30\":1}}],[\"所有\",{\"1\":{\"29\":1,\"31\":1,\"33\":1,\"35\":1,\"38\":1,\"39\":1,\"42\":4,\"43\":2}}],[\"所\",{\"1\":{\"23\":1,\"29\":1}}],[\"所以\",{\"1\":{\"6\":3,\"26\":1,\"41\":1}}],[\"所谓\",{\"1\":{\"6\":3,\"33\":1}}],[\"剩\",{\"1\":{\"6\":1}}],[\"只要\",{\"1\":{\"39\":2}}],[\"只有\",{\"1\":{\"29\":1,\"31\":1,\"32\":2,\"33\":1}}],[\"只能\",{\"1\":{\"24\":1,\"26\":1,\"33\":5,\"39\":3}}],[\"只\",{\"1\":{\"6\":1,\"25\":1,\"32\":1,\"35\":1,\"43\":2}}],[\"只是\",{\"1\":{\"6\":1,\"35\":1}}],[\"多种类型\",{\"1\":{\"39\":1}}],[\"多种\",{\"1\":{\"35\":1}}],[\"多态\",{\"1\":{\"35\":4}}],[\"多个\",{\"1\":{\"29\":1,\"32\":1,\"33\":1,\"39\":2}}],[\"多去\",{\"1\":{\"6\":1}}],[\"多\",{\"1\":{\"6\":1,\"29\":1,\"39\":1}}],[\"多虑\",{\"1\":{\"6\":1}}],[\"杭州\",{\"1\":{\"6\":1}}],[\"怀疑\",{\"1\":{\"6\":1}}],[\"产生\",{\"1\":{\"6\":1}}],[\"曾\",{\"1\":{\"6\":1}}],[\"曾经\",{\"1\":{\"6\":2}}],[\"屡战屡败\",{\"1\":{\"6\":1}}],[\"竞赛\",{\"1\":{\"6\":3}}],[\"突出\",{\"1\":{\"6\":1}}],[\"前缀\",{\"1\":{\"28\":3}}],[\"前面\",{\"1\":{\"28\":1,\"33\":1}}],[\"前行\",{\"1\":{\"6\":1}}],[\"前\",{\"1\":{\"6\":2,\"29\":1}}],[\"荒废\",{\"1\":{\"6\":1}}],[\"焦虑\",{\"1\":{\"6\":3}}],[\"段时间\",{\"1\":{\"6\":1}}],[\"七月\",{\"1\":{\"6\":1}}],[\"投递\",{\"1\":{\"6\":1}}],[\"投\",{\"1\":{\"6\":1}}],[\"实际上\",{\"1\":{\"29\":1}}],[\"实例\",{\"1\":{\"25\":1,\"31\":2,\"32\":9,\"33\":6,\"35\":1,\"37\":1,\"38\":1,\"42\":1}}],[\"实现\",{\"1\":{\"24\":1,\"32\":1,\"35\":2,\"37\":2,\"38\":7,\"39\":8,\"42\":7,\"43\":1}}],[\"实用\",{\"1\":{\"24\":1,\"38\":1}}],[\"实习\",{\"1\":{\"6\":9}}],[\"实质性\",{\"1\":{\"6\":1}}],[\"找到\",{\"1\":{\"6\":1}}],[\"找\",{\"1\":{\"6\":4}}],[\"约\",{\"1\":{\"6\":1,\"23\":2}}],[\"末尾\",{\"1\":{\"6\":1}}],[\"昨天\",{\"1\":{\"6\":1}}],[\"比较\",{\"1\":{\"24\":4,\"25\":1,\"31\":1,\"35\":1}}],[\"比如说\",{\"1\":{\"26\":1}}],[\"比如\",{\"1\":{\"24\":1,\"33\":1,\"38\":2,\"39\":5,\"41\":1}}],[\"比\",{\"1\":{\"6\":2}}],[\"身高\",{\"1\":{\"41\":5,\"42\":5}}],[\"身体健康\",{\"1\":{\"6\":2}}],[\"身边\",{\"1\":{\"6\":1}}],[\"休息\",{\"1\":{\"6\":1}}],[\"吃饭\",{\"1\":{\"6\":1}}],[\"吃喝玩乐\",{\"1\":{\"6\":1}}],[\"好\",{\"1\":{\"6\":4}}],[\"好好\",{\"1\":{\"6\":2}}],[\"好像\",{\"1\":{\"6\":2}}],[\"锻炼身体\",{\"1\":{\"6\":1}}],[\"篮球场\",{\"1\":{\"6\":1}}],[\"篮球\",{\"1\":{\"6\":1,\"38\":1}}],[\"热爱\",{\"1\":{\"6\":3}}],[\"重复\",{\"1\":{\"38\":1}}],[\"重新\",{\"1\":{\"32\":1,\"39\":1}}],[\"重载\",{\"1\":{\"32\":4}}],[\"重写\",{\"1\":{\"24\":1,\"32\":5,\"33\":3,\"35\":3,\"37\":2,\"39\":1}}],[\"重用\",{\"1\":{\"24\":1,\"35\":1}}],[\"重要\",{\"1\":{\"6\":1}}],[\"重拾\",{\"1\":{\"6\":1}}],[\"重心\",{\"1\":{\"6\":1}}],[\"吵闹\",{\"1\":{\"6\":1}}],[\"搬离\",{\"1\":{\"6\":1}}],[\"内聚性\",{\"1\":{\"38\":1}}],[\"内部\",{\"1\":{\"31\":1,\"33\":3,\"35\":1,\"42\":1,\"43\":2}}],[\"内存地址\",{\"1\":{\"41\":5,\"42\":5}}],[\"内存空间\",{\"1\":{\"41\":1}}],[\"内存\",{\"1\":{\"24\":1,\"25\":2,\"29\":2,\"31\":3,\"32\":1,\"42\":2}}],[\"内\",{\"1\":{\"24\":1,\"29\":1}}],[\"内耗\",{\"1\":{\"6\":2}}],[\"内容\",{\"1\":{\"4\":1,\"5\":1,\"10\":1,\"11\":2,\"13\":1,\"14\":1,\"16\":1,\"17\":2,\"19\":1,\"20\":2,\"41\":1,\"45\":1,\"46\":1,\"48\":1,\"49\":1}}],[\"技能\",{\"1\":{\"6\":1}}],[\"技术\",{\"1\":{\"6\":1,\"35\":1}}],[\"享受\",{\"1\":{\"6\":1}}],[\"很大\",{\"1\":{\"26\":1}}],[\"很多\",{\"1\":{\"6\":2}}],[\"很\",{\"1\":{\"6\":2}}],[\"敲\",{\"1\":{\"6\":1}}],[\"刷新\",{\"1\":{\"6\":1}}],[\"刷\",{\"1\":{\"6\":1}}],[\"看\",{\"1\":{\"6\":1}}],[\"看到\",{\"1\":{\"6\":1,\"41\":1}}],[\"泡\",{\"1\":{\"6\":1}}],[\"就要\",{\"1\":{\"32\":1}}],[\"就业\",{\"1\":{\"6\":1}}],[\"就算\",{\"1\":{\"6\":1}}],[\"就\",{\"1\":{\"6\":3,\"26\":3,\"30\":1,\"32\":3,\"33\":2,\"39\":2}}],[\"就是\",{\"1\":{\"6\":4,\"26\":3,\"32\":3,\"33\":1,\"39\":1}}],[\"没\",{\"1\":{\"26\":1}}],[\"没课\",{\"1\":{\"6\":1}}],[\"没有\",{\"1\":{\"6\":7,\"24\":1,\"25\":1,\"26\":1,\"30\":1,\"31\":1,\"33\":2,\"35\":1,\"38\":2,\"39\":1,\"42\":2}}],[\"白天\",{\"1\":{\"6\":1}}],[\"感谢\",{\"1\":{\"6\":1}}],[\"感受\",{\"1\":{\"6\":1}}],[\"感兴趣\",{\"1\":{\"6\":1}}],[\"感觉\",{\"1\":{\"6\":1}}],[\"发现\",{\"1\":{\"38\":1}}],[\"发出\",{\"1\":{\"35\":1}}],[\"发展\",{\"1\":{\"6\":1}}],[\"发生\",{\"1\":{\"6\":1,\"26\":2,\"30\":1,\"32\":2}}],[\"职业\",{\"1\":{\"6\":1}}],[\"有效\",{\"1\":{\"42\":1}}],[\"有效数字\",{\"1\":{\"23\":2}}],[\"有别于\",{\"1\":{\"32\":1}}],[\"有何\",{\"1\":{\"32\":1}}],[\"有关\",{\"1\":{\"6\":1}}],[\"有限\",{\"1\":{\"6\":1,\"26\":1}}],[\"有\",{\"1\":{\"6\":10,\"25\":3,\"26\":1,\"30\":2,\"31\":1,\"33\":1,\"37\":2,\"38\":6,\"39\":5,\"42\":1}}],[\"有时候\",{\"1\":{\"6\":1,\"30\":1}}],[\"逐渐\",{\"1\":{\"6\":4}}],[\"后缀\",{\"1\":{\"28\":3}}],[\"后面\",{\"1\":{\"23\":2,\"28\":1,\"32\":1}}],[\"后\",{\"1\":{\"6\":1,\"29\":1,\"31\":2,\"41\":4,\"42\":4}}],[\"持续\",{\"1\":{\"6\":1}}],[\"以下几点\",{\"1\":{\"35\":2,\"38\":1}}],[\"以\",{\"1\":{\"33\":1,\"35\":2,\"38\":1}}],[\"以及\",{\"1\":{\"6\":3,\"23\":1,\"41\":1}}],[\"以来\",{\"1\":{\"6\":1}}],[\"电脑\",{\"1\":{\"6\":1}}],[\"区别\",{\"0\":{\"25\":1,\"39\":1},\"1\":{\"6\":1,\"25\":1,\"31\":2,\"32\":1,\"41\":1}}],[\"与\",{\"0\":{\"25\":1,\"36\":1},\"1\":{\"6\":5,\"25\":2,\"31\":2,\"35\":1,\"38\":1,\"42\":1}}],[\"依旧\",{\"1\":{\"6\":1}}],[\"还要\",{\"1\":{\"42\":1}}],[\"还会\",{\"1\":{\"42\":1}}],[\"还是\",{\"1\":{\"6\":1,\"37\":1,\"39\":2}}],[\"还\",{\"1\":{\"6\":2,\"32\":1,\"38\":1,\"39\":1}}],[\"总结\",{\"1\":{\"6\":1}}],[\"总是\",{\"1\":{\"6\":1}}],[\"得到\",{\"1\":{\"6\":2,\"26\":1,\"28\":2}}],[\"过程\",{\"1\":{\"6\":3,\"26\":2,\"30\":1,\"32\":1,\"35\":3}}],[\"过\",{\"1\":{\"6\":2}}],[\"但是\",{\"1\":{\"30\":1,\"32\":1,\"35\":1}}],[\"但\",{\"1\":{\"6\":4,\"26\":1,\"28\":1,\"32\":1,\"33\":1,\"35\":3,\"37\":1,\"39\":1,\"42\":1}}],[\"？\",{\"1\":{\"6\":1,\"26\":1,\"32\":2,\"38\":1}}],[\"不用\",{\"1\":{\"39\":1}}],[\"不仅\",{\"1\":{\"39\":1,\"42\":1}}],[\"不必\",{\"1\":{\"38\":1}}],[\"不必要\",{\"1\":{\"25\":1}}],[\"不定\",{\"1\":{\"33\":1}}],[\"不可\",{\"1\":{\"33\":3,\"41\":3,\"43\":1}}],[\"不过\",{\"1\":{\"32\":1}}],[\"不要\",{\"1\":{\"26\":1}}],[\"不断\",{\"1\":{\"26\":1}}],[\"不爽\",{\"1\":{\"26\":1}}],[\"不大\",{\"1\":{\"24\":1}}],[\"不能\",{\"1\":{\"24\":1,\"25\":1,\"32\":2,\"33\":6,\"35\":2,\"37\":1,\"38\":1,\"39\":1}}],[\"不\",{\"1\":{\"6\":1,\"24\":2,\"25\":1,\"26\":1,\"29\":2,\"30\":1,\"32\":6,\"33\":3,\"35\":2,\"37\":1,\"38\":2,\"39\":2,\"42\":1,\"43\":3}}],[\"不同\",{\"1\":{\"6\":2,\"28\":2,\"32\":9,\"33\":1,\"38\":1,\"41\":1,\"42\":1}}],[\"不错\",{\"1\":{\"6\":1}}],[\"不会\",{\"1\":{\"6\":1,\"29\":1,\"42\":1}}],[\"不多\",{\"1\":{\"6\":1}}],[\"不再\",{\"1\":{\"6\":1}}],[\"不小\",{\"1\":{\"6\":1}}],[\"不挂\",{\"1\":{\"6\":1}}],[\"不是\",{\"1\":{\"6\":3,\"24\":2,\"33\":1}}],[\"冲刺\",{\"1\":{\"6\":1}}],[\"月\",{\"1\":{\"6\":1}}],[\"然后\",{\"1\":{\"6\":2,\"28\":4}}],[\"样子\",{\"1\":{\"6\":1}}],[\"自身\",{\"1\":{\"42\":1}}],[\"自\",{\"1\":{\"39\":2}}],[\"自父\",{\"1\":{\"32\":1}}],[\"自减\",{\"0\":{\"28\":1},\"1\":{\"28\":1}}],[\"自增\",{\"0\":{\"28\":1},\"1\":{\"28\":1}}],[\"自动\",{\"1\":{\"25\":4,\"38\":2}}],[\"自学\",{\"1\":{\"6\":2}}],[\"自我认识\",{\"1\":{\"6\":1}}],[\"自我\",{\"1\":{\"6\":2}}],[\"自由\",{\"1\":{\"6\":2}}],[\"自己\",{\"1\":{\"6\":21,\"35\":2,\"38\":1}}],[\"自习室\",{\"1\":{\"6\":3}}],[\"什么样\",{\"1\":{\"6\":1}}],[\"什么\",{\"1\":{\"6\":3,\"39\":2}}],[\"究竟\",{\"1\":{\"6\":1}}],[\"思维\",{\"1\":{\"6\":2}}],[\"思考\",{\"1\":{\"6\":1}}],[\"思想\",{\"1\":{\"6\":1}}],[\"高位\",{\"1\":{\"29\":5}}],[\"高效\",{\"1\":{\"29\":2}}],[\"高性能\",{\"1\":{\"25\":1}}],[\"高考\",{\"1\":{\"6\":1}}],[\"高\",{\"1\":{\"6\":1}}],[\"高中时代\",{\"1\":{\"6\":1}}],[\"高中\",{\"1\":{\"6\":3}}],[\"分配内存\",{\"1\":{\"32\":1}}],[\"分散\",{\"1\":{\"24\":1}}],[\"分上\",{\"1\":{\"6\":1}}],[\"分得\",{\"1\":{\"6\":1}}],[\"分别\",{\"1\":{\"6\":1,\"23\":1}}],[\"课程\",{\"1\":{\"6\":2}}],[\"谈好\",{\"1\":{\"6\":1}}],[\"谈到\",{\"1\":{\"6\":1}}],[\"把\",{\"1\":{\"6\":2,\"35\":1}}],[\"）\",{\"1\":{\"6\":2,\"23\":5,\"24\":11,\"25\":10,\"26\":1,\"28\":6,\"29\":13,\"31\":1,\"32\":3,\"33\":11,\"35\":10,\"37\":4,\"38\":1,\"39\":10,\"41\":3,\"43\":3}}],[\"（\",{\"1\":{\"6\":2,\"23\":5,\"24\":11,\"25\":10,\"26\":1,\"28\":6,\"29\":13,\"31\":1,\"32\":3,\"33\":11,\"35\":10,\"37\":4,\"38\":1,\"39\":10,\"41\":3,\"43\":3}}],[\"恋爱\",{\"1\":{\"6\":6}}],[\"恋恋不舍\",{\"1\":{\"6\":1}}],[\"甜甜的\",{\"1\":{\"6\":1}}],[\"游戏\",{\"1\":{\"6\":1}}],[\"怎么\",{\"1\":{\"6\":4}}],[\"放到\",{\"1\":{\"6\":1}}],[\"放在\",{\"1\":{\"6\":1,\"28\":1}}],[\"放置\",{\"1\":{\"0\":1}}],[\"并且\",{\"1\":{\"42\":1}}],[\"并\",{\"1\":{\"6\":3,\"37\":1,\"42\":1}}],[\"时钟\",{\"1\":{\"29\":2}}],[\"时\",{\"1\":{\"24\":1,\"26\":2,\"30\":1,\"32\":3,\"33\":4,\"37\":2,\"38\":1,\"42\":1}}],[\"时代\",{\"1\":{\"6\":2}}],[\"时候\",{\"1\":{\"6\":6,\"32\":2}}],[\"时间\",{\"1\":{\"6\":3}}],[\"那些\",{\"1\":{\"6\":1}}],[\"那\",{\"1\":{\"6\":1}}],[\"那个\",{\"1\":{\"6\":1}}],[\"食堂\",{\"1\":{\"6\":1}}],[\"宿舍\",{\"1\":{\"6\":2}}],[\"教室\",{\"1\":{\"6\":1}}],[\"差不多\",{\"1\":{\"6\":1}}],[\"疫情\",{\"1\":{\"6\":1}}],[\"受\",{\"1\":{\"6\":1,\"41\":1}}],[\"由于\",{\"1\":{\"6\":1}}],[\"形式\",{\"1\":{\"6\":1}}],[\"式\",{\"1\":{\"6\":1}}],[\"走马观花\",{\"1\":{\"6\":1}}],[\"居多\",{\"1\":{\"6\":1}}],[\"玩\",{\"1\":{\"6\":1}}],[\"脱离\",{\"1\":{\"6\":1}}],[\"中是\",{\"1\":{\"42\":1}}],[\"中心\",{\"1\":{\"35\":2}}],[\"中有\",{\"1\":{\"23\":1,\"29\":1}}],[\"中小\",{\"1\":{\"6\":1}}],[\"中旬\",{\"1\":{\"6\":1}}],[\"中\",{\"1\":{\"6\":7,\"24\":2,\"26\":1,\"30\":2,\"31\":4,\"32\":1,\"33\":1,\"35\":4,\"37\":3,\"38\":15,\"39\":8,\"41\":1,\"42\":2}}],[\"束缚\",{\"1\":{\"6\":1}}],[\"刚\",{\"1\":{\"6\":1}}],[\"二进制位\",{\"1\":{\"29\":1}}],[\"二进制\",{\"1\":{\"26\":5,\"29\":2}}],[\"二\",{\"1\":{\"6\":3}}],[\"大量\",{\"1\":{\"38\":1}}],[\"大型项目\",{\"1\":{\"38\":1}}],[\"大型\",{\"1\":{\"35\":1}}],[\"大于\",{\"1\":{\"32\":1}}],[\"大小\",{\"1\":{\"23\":1}}],[\"大厂\",{\"1\":{\"6\":1}}],[\"大四\",{\"1\":{\"6\":2}}],[\"大三\",{\"1\":{\"6\":2}}],[\"大多数\",{\"1\":{\"6\":1}}],[\"大\",{\"1\":{\"6\":3,\"29\":1,\"35\":1}}],[\"大学\",{\"0\":{\"6\":1},\"1\":{\"2\":1,\"6\":11}}],[\"慢慢\",{\"1\":{\"6\":1}}],[\"慢\",{\"1\":{\"6\":1}}],[\"也就是说\",{\"1\":{\"32\":1,\"33\":1,\"38\":1}}],[\"也许\",{\"1\":{\"6\":3}}],[\"也\",{\"1\":{\"6\":19,\"25\":1,\"26\":1,\"32\":1,\"33\":2,\"35\":1,\"38\":1,\"39\":2,\"41\":3,\"42\":2}}],[\"快\",{\"1\":{\"6\":2}}],[\",\",{\"1\":{\"6\":13,\"11\":1,\"17\":1,\"20\":1,\"23\":63,\"24\":66,\"25\":30,\"26\":9,\"28\":14,\"29\":16,\"30\":5,\"31\":16,\"32\":18,\"33\":27,\"35\":41,\"37\":2,\"38\":22,\"39\":19,\"41\":26,\"42\":31,\"43\":17}}],[\"会先\",{\"1\":{\"29\":1}}],[\"会\",{\"1\":{\"6\":9,\"24\":3,\"25\":1,\"26\":1,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"38\":2,\"41\":4,\"42\":3,\"43\":1}}],[\"才能\",{\"1\":{\"31\":1,\"35\":1}}],[\"才\",{\"1\":{\"6\":3,\"32\":1}}],[\"说明\",{\"1\":{\"24\":1,\"28\":1}}],[\"说些\",{\"1\":{\"6\":1}}],[\"说慢\",{\"1\":{\"6\":1}}],[\"说\",{\"1\":{\"6\":2}}],[\"等于\",{\"1\":{\"32\":2}}],[\"等等\",{\"1\":{\"6\":2,\"39\":1}}],[\"等\",{\"1\":{\"6\":1,\"25\":2,\"29\":2}}],[\"要求\",{\"1\":{\"30\":1,\"42\":1}}],[\"要\",{\"1\":{\"6\":2,\"23\":2,\"32\":1,\"37\":1,\"38\":4}}],[\"一部分\",{\"1\":{\"39\":1}}],[\"一组\",{\"1\":{\"37\":1,\"39\":1}}],[\"一样\",{\"1\":{\"32\":1}}],[\"一元\",{\"1\":{\"28\":1}}],[\"一类\",{\"1\":{\"28\":1}}],[\"一般\",{\"1\":{\"25\":2,\"30\":1,\"32\":2}}],[\"一种\",{\"1\":{\"24\":1,\"29\":1,\"37\":1,\"39\":4,\"42\":1}}],[\"一切\",{\"1\":{\"6\":1}}],[\"一步\",{\"1\":{\"6\":1}}],[\"一起\",{\"1\":{\"6\":1}}],[\"一蹴而就\",{\"1\":{\"6\":1}}],[\"一次\",{\"1\":{\"6\":1,\"30\":2}}],[\"一生\",{\"1\":{\"6\":1}}],[\"一些\",{\"1\":{\"6\":2,\"35\":1,\"38\":3}}],[\"一个\",{\"1\":{\"6\":6,\"24\":1,\"26\":2,\"29\":2,\"30\":1,\"31\":1,\"32\":1,\"33\":2,\"35\":1,\"37\":3,\"38\":6,\"39\":9,\"41\":3,\"42\":1}}],[\"一份\",{\"1\":{\"6\":1}}],[\"一年\",{\"1\":{\"6\":2}}],[\"一定\",{\"1\":{\"6\":2,\"23\":2,\"42\":1}}],[\"一\",{\"1\":{\"6\":1}}],[\"一下\",{\"1\":{\"6\":1}}],[\"一点点\",{\"1\":{\"6\":1}}],[\"一点\",{\"1\":{\"6\":3}}],[\"一大\",{\"1\":{\"6\":3}}],[\"一直\",{\"1\":{\"6\":2}}],[\"一转眼\",{\"1\":{\"6\":1}}],[\"从而\",{\"1\":{\"29\":1,\"38\":1}}],[\"从上到下\",{\"1\":{\"26\":1}}],[\"从未\",{\"1\":{\"6\":1}}],[\"从\",{\"1\":{\"6\":5,\"33\":1,\"38\":3,\"42\":1}}],[\"珍惜\",{\"1\":{\"6\":1}}],[\"格外\",{\"1\":{\"6\":1}}],[\"却\",{\"1\":{\"6\":1,\"26\":1}}],[\"见怪不怪\",{\"1\":{\"6\":1}}],[\"习以为常\",{\"1\":{\"6\":1}}],[\"对外\",{\"1\":{\"35\":1}}],[\"对比\",{\"0\":{\"43\":1},\"1\":{\"35\":1}}],[\"对象\",{\"1\":{\"24\":6,\"25\":5,\"31\":3,\"32\":6,\"33\":1,\"35\":10,\"39\":2,\"41\":22,\"42\":20,\"43\":19}}],[\"对象化\",{\"1\":{\"24\":1}}],[\"对应\",{\"1\":{\"24\":1,\"41\":1,\"43\":1}}],[\"对于\",{\"1\":{\"6\":4}}],[\"对此\",{\"1\":{\"6\":1}}],[\"对\",{\"1\":{\"6\":6,\"24\":1,\"28\":1,\"29\":3,\"32\":1,\"35\":1,\"42\":2}}],[\"仿佛\",{\"1\":{\"6\":1}}],[\"们\",{\"1\":{\"6\":1}}],[\"学生\",{\"1\":{\"6\":2,\"41\":13,\"42\":13}}],[\"学历\",{\"1\":{\"6\":1}}],[\"学校\",{\"1\":{\"6\":2}}],[\"学期\",{\"1\":{\"6\":1}}],[\"学习成绩\",{\"1\":{\"6\":1}}],[\"学习\",{\"1\":{\"6\":16}}],[\"学妹\",{\"1\":{\"6\":1}}],[\"学弟\",{\"1\":{\"6\":1}}],[\"备考\",{\"1\":{\"6\":1}}],[\"、\",{\"0\":{\"30\":1},\"1\":{\"6\":31,\"23\":5,\"24\":1,\"25\":4,\"29\":7,\"31\":2,\"32\":5,\"33\":3,\"35\":9,\"37\":1,\"38\":1,\"39\":5,\"41\":2}}],[\"努力\",{\"1\":{\"6\":1}}],[\"都\",{\"1\":{\"6\":13,\"29\":1,\"31\":1,\"38\":1,\"39\":2,\"42\":1}}],[\"里教\",{\"1\":{\"6\":1}}],[\"里\",{\"1\":{\"6\":4,\"23\":2,\"41\":1}}],[\"熟悉\",{\"1\":{\"6\":1}}],[\"坐在\",{\"1\":{\"6\":1}}],[\"正如\",{\"1\":{\"38\":1}}],[\"正常\",{\"1\":{\"30\":1}}],[\"正数\",{\"1\":{\"29\":3}}],[\"正\",{\"1\":{\"6\":1}}],[\"此时\",{\"1\":{\"32\":1,\"37\":1}}],[\"此刻\",{\"1\":{\"6\":1}}],[\"此处\",{\"1\":{\"0\":1,\"1\":1,\"7\":1}}],[\"了解\",{\"1\":{\"6\":1}}],[\"了\",{\"1\":{\"6\":25,\"26\":2,\"30\":1,\"32\":1,\"35\":1,\"38\":3,\"39\":5,\"41\":4,\"42\":1}}],[\"杀青\",{\"1\":{\"6\":1}}],[\"这段\",{\"1\":{\"38\":1}}],[\"这些\",{\"1\":{\"6\":2,\"29\":2,\"38\":1,\"39\":1,\"41\":1}}],[\"这么\",{\"1\":{\"6\":1}}],[\"这\",{\"1\":{\"6\":12,\"23\":1,\"24\":1,\"26\":2,\"30\":2,\"38\":6,\"41\":1,\"42\":1}}],[\"这样\",{\"1\":{\"6\":5,\"38\":1}}],[\"这种\",{\"1\":{\"6\":1,\"32\":2,\"42\":2}}],[\"这个\",{\"1\":{\"6\":2,\"26\":2,\"32\":3,\"33\":1,\"38\":2,\"39\":1,\"41\":1}}],[\"这里\",{\"1\":{\"4\":1,\"5\":1,\"10\":1,\"11\":2,\"13\":1,\"14\":1,\"16\":1,\"17\":2,\"19\":1,\"20\":2,\"45\":1,\"46\":1,\"48\":1,\"49\":1}}],[\"，\",{\"1\":{\"6\":109,\"23\":8,\"24\":11,\"25\":2,\"26\":12,\"28\":10,\"29\":24,\"30\":11,\"31\":11,\"32\":29,\"33\":20,\"35\":25,\"37\":8,\"38\":31,\"39\":28,\"41\":10,\"42\":14,\"43\":7}}],[\"夏天\",{\"1\":{\"6\":3}}],[\"到底\",{\"1\":{\"6\":2,\"35\":1}}],[\"到\",{\"1\":{\"6\":5,\"24\":1,\"42\":1}}],[\"又\",{\"1\":{\"6\":2}}],[\"356573597\",{\"1\":{\"41\":4,\"42\":2}}],[\"3.\",{\"1\":{\"43\":1}}],[\"3.1415926\",{\"1\":{\"23\":1}}],[\"3.14\",{\"1\":{\"23\":1}}],[\"3.4028235\",{\"1\":{\"23\":1}}],[\"324\",{\"1\":{\"23\":1}}],[\"32\",{\"1\":{\"23\":2,\"29\":1}}],[\"32767\",{\"1\":{\"23\":1}}],[\"32768\",{\"1\":{\"23\":1}}],[\"3\",{\"0\":{\"5\":1,\"11\":1,\"14\":1,\"17\":1,\"20\":1,\"46\":1,\"49\":1},\"1\":{\"28\":1,\"33\":1}}],[\"2.\",{\"1\":{\"43\":2}}],[\"20\",{\"1\":{\"33\":1}}],[\"21\",{\"1\":{\"41\":2,\"42\":2}}],[\"2147483644\",{\"1\":{\"29\":1}}],[\"2147483647\",{\"1\":{\"23\":1}}],[\"2147483648\",{\"1\":{\"23\":1}}],[\"211\",{\"1\":{\"6\":1}}],[\"2\",{\"0\":{\"3\":1,\"4\":1,\"10\":1,\"13\":1,\"16\":1,\"19\":1,\"34\":1,\"45\":1,\"47\":1,\"48\":1},\"1\":{\"23\":8,\"26\":6,\"29\":2,\"32\":1,\"33\":2}}],[\" \",{\"0\":{\"3\":1,\"4\":1,\"5\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"16\":1,\"17\":1,\"19\":1,\"20\":1,\"30\":2,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1},\"1\":{\"6\":4,\"23\":70,\"24\":104,\"25\":35,\"26\":76,\"28\":102,\"29\":80,\"30\":7,\"31\":3,\"32\":15,\"33\":213,\"35\":20,\"37\":23,\"38\":117,\"39\":168,\"41\":241,\"42\":269,\"43\":12,\"50\":2}}],[\"四年\",{\"0\":{\"6\":1},\"1\":{\"2\":1,\"6\":3}}],[\"我会\",{\"1\":{\"6\":1}}],[\"我们\",{\"1\":{\"6\":9,\"24\":1,\"25\":1,\"26\":2,\"38\":3,\"39\":3}}],[\"我\",{\"0\":{\"6\":1},\"1\":{\"2\":1,\"6\":45,\"39\":2}}],[\"文档\",{\"1\":{\"1\":1,\"7\":1,\"38\":1}}],[\"是否\",{\"1\":{\"25\":2,\"32\":1}}],[\"是否是\",{\"1\":{\"25\":1}}],[\"是值\",{\"1\":{\"24\":1}}],[\"是因为\",{\"1\":{\"24\":1}}],[\"是\",{\"1\":{\"1\":1,\"4\":1,\"5\":1,\"6\":17,\"7\":1,\"10\":1,\"11\":2,\"13\":1,\"14\":1,\"16\":1,\"17\":2,\"19\":1,\"20\":2,\"24\":6,\"25\":1,\"26\":3,\"28\":1,\"29\":1,\"31\":1,\"32\":3,\"33\":1,\"35\":8,\"37\":2,\"38\":4,\"39\":11,\"41\":2,\"42\":4,\"45\":1,\"46\":1,\"48\":1,\"49\":1}}],[\"。\",{\"1\":{\"0\":1,\"4\":1,\"5\":1,\"6\":32,\"10\":1,\"11\":2,\"13\":1,\"14\":1,\"16\":1,\"17\":2,\"19\":1,\"20\":2,\"23\":4,\"24\":5,\"25\":2,\"26\":5,\"28\":2,\"29\":7,\"30\":4,\"32\":13,\"33\":20,\"35\":7,\"37\":3,\"38\":13,\"39\":18,\"41\":2,\"42\":8,\"43\":13,\"45\":1,\"46\":1,\"48\":1,\"49\":1}}],[\"在\",{\"1\":{\"0\":1,\"6\":14,\"23\":2,\"24\":1,\"25\":1,\"26\":3,\"29\":3,\"30\":2,\"31\":2,\"32\":8,\"33\":7,\"35\":5,\"38\":4,\"39\":5,\"41\":1,\"42\":4}}],[\"档案\",{\"1\":{\"0\":1}}],[\"和\",{\"0\":{\"30\":1,\"40\":1},\"1\":{\"0\":1,\"6\":3,\"24\":1,\"25\":1,\"26\":1,\"28\":1,\"29\":3,\"32\":6,\"33\":7,\"35\":10,\"38\":6,\"39\":5,\"41\":4,\"42\":2,\"43\":3}}],[\"的类\",{\"1\":{\"33\":2}}],[\"的话\",{\"1\":{\"6\":1,\"25\":1}}],[\"的\",{\"0\":{\"6\":1,\"26\":1,\"39\":1},\"1\":{\"0\":1,\"1\":1,\"2\":1,\"6\":107,\"7\":1,\"23\":4,\"24\":16,\"25\":6,\"26\":10,\"28\":9,\"29\":11,\"30\":6,\"31\":6,\"32\":27,\"33\":17,\"35\":33,\"37\":6,\"38\":28,\"39\":19,\"41\":12,\"42\":22,\"43\":7}}],[\"你\",{\"1\":{\"0\":1,\"6\":1,\"32\":1,\"43\":1}}],[\"将\",{\"1\":{\"0\":1,\"6\":1,\"23\":2,\"24\":1,\"28\":2,\"29\":1,\"38\":2,\"42\":1}}],[\"页\",{\"0\":{\"0\":1}}],[\"介绍\",{\"0\":{\"0\":1},\"1\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,_t(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:n,options:o,id:s}})=>{const r=xt[n];e==="suggest"?self.postMessage([e,s,ve(t,r,o)]):e==="search"?self.postMessage([e,s,Ie(t,r,o,"max")]):self.postMessage({suggestions:[e,s,ve(t,r,o)],results:[e,s,Ie(t,r,o,__SLIMSEARCH_SORT_STRATEGY__)]})};
//# sourceMappingURL=index.js.map
